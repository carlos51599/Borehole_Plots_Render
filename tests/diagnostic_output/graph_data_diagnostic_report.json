{
  "timestamp": "C:\\Users\\dea29431.RSKGAD\\OneDrive - Rsk Group Limited\\Documents\\Geotech\\AGS Section\\Geo_Borehole_Sections_Render",
  "errors": [
    "Test 5: Empty data not properly handled in HTML",
    "Test 6: Missing critical elements: ['\"nodes\":[', '\"edges\":[']"
  ],
  "test_results": {
    "basic_generation": {
      "success": true,
      "nodes_count": 45,
      "edges_count": 69,
      "graph_data": {
        "nodes": [
          {
            "id": "root__app",
            "name": "app",
            "stem": "app",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "app.py",
            "imports_count": 3,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 23005,
            "index": 0
          },
          {
            "id": "root__app_constants",
            "name": "app_constants",
            "stem": "app_constants",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "app_constants.py",
            "imports_count": 0,
            "importance": 0.7442894705540105,
            "is_test": false,
            "is_init": false,
            "size": 8612,
            "index": 1
          },
          {
            "id": "root__app_factory",
            "name": "app_factory",
            "stem": "app_factory",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "app_factory.py",
            "imports_count": 0,
            "importance": 0.26749233841348097,
            "is_test": false,
            "is_init": false,
            "size": 576,
            "index": 2
          },
          {
            "id": "root__borehole_log_professional",
            "name": "borehole_log_professional",
            "stem": "borehole_log_professional",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "borehole_log_professional.py",
            "imports_count": 2,
            "importance": 0.4972969170040625,
            "is_test": false,
            "is_init": false,
            "size": 63204,
            "index": 3
          },
          {
            "id": "root__callbacks_split",
            "name": "callbacks_split",
            "stem": "callbacks_split",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "callbacks_split.py",
            "imports_count": 11,
            "importance": 0.26749233841348097,
            "is_test": false,
            "is_init": false,
            "size": 98589,
            "index": 4
          },
          {
            "id": "root__comprehensive_optimization_validation",
            "name": "comprehensive_optimization_validation",
            "stem": "comprehensive_optimization_validation",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "comprehensive_optimization_validation.py",
            "imports_count": 4,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 24553,
            "index": 5
          },
          {
            "id": "root__config",
            "name": "config",
            "stem": "config",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "config.py",
            "imports_count": 0,
            "importance": 0.42132286877637004,
            "is_test": false,
            "is_init": false,
            "size": 23646,
            "index": 6
          },
          {
            "id": "root__coordinate_service",
            "name": "coordinate_service",
            "stem": "coordinate_service",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "coordinate_service.py",
            "imports_count": 0,
            "importance": 0.8463930548017131,
            "is_test": false,
            "is_init": false,
            "size": 13690,
            "index": 7
          },
          {
            "id": "root__dataframe_optimizer",
            "name": "dataframe_optimizer",
            "stem": "dataframe_optimizer",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "dataframe_optimizer.py",
            "imports_count": 0,
            "importance": 0.273398013417415,
            "is_test": false,
            "is_init": false,
            "size": 10995,
            "index": 8
          },
          {
            "id": "root__data_loader",
            "name": "data_loader",
            "stem": "data_loader",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "data_loader.py",
            "imports_count": 0,
            "importance": 0.3702264765027494,
            "is_test": false,
            "is_init": false,
            "size": 1730,
            "index": 9
          },
          {
            "id": "root__debug_module",
            "name": "debug_module",
            "stem": "debug_module",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "debug_module.py",
            "imports_count": 1,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 1122,
            "index": 10
          },
          {
            "id": "root__debug_offset_layout",
            "name": "debug_offset_layout",
            "stem": "debug_offset_layout",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "debug_offset_layout.py",
            "imports_count": 1,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 1803,
            "index": 11
          },
          {
            "id": "root__enhanced_error_handling",
            "name": "enhanced_error_handling",
            "stem": "enhanced_error_handling",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "enhanced_error_handling.py",
            "imports_count": 2,
            "importance": 0.252728150903646,
            "is_test": false,
            "is_init": false,
            "size": 12371,
            "index": 12
          },
          {
            "id": "root__error_handling",
            "name": "error_handling",
            "stem": "error_handling",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "error_handling.py",
            "imports_count": 0,
            "importance": 0.3921635984444459,
            "is_test": false,
            "is_init": false,
            "size": 13039,
            "index": 13
          },
          {
            "id": "root__error_recovery",
            "name": "error_recovery",
            "stem": "error_recovery",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "error_recovery.py",
            "imports_count": 1,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 16853,
            "index": 14
          },
          {
            "id": "root__final_validation",
            "name": "final_validation",
            "stem": "final_validation",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "final_validation.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 3910,
            "index": 15
          },
          {
            "id": "root__geology_code_utils",
            "name": "geology_code_utils",
            "stem": "geology_code_utils",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "geology_code_utils.py",
            "imports_count": 0,
            "importance": 1.0,
            "is_test": false,
            "is_init": false,
            "size": 1795,
            "index": 16
          },
          {
            "id": "root__interactive_validation",
            "name": "interactive_validation",
            "stem": "interactive_validation",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "interactive_validation.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 22052,
            "index": 17
          },
          {
            "id": "root__lazy_marker_manager",
            "name": "lazy_marker_manager",
            "stem": "lazy_marker_manager",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "lazy_marker_manager.py",
            "imports_count": 0,
            "importance": 0.3499134151871348,
            "is_test": false,
            "is_init": false,
            "size": 16437,
            "index": 18
          },
          {
            "id": "root__loading_indicators",
            "name": "loading_indicators",
            "stem": "loading_indicators",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "loading_indicators.py",
            "imports_count": 1,
            "importance": 0.22910545088791,
            "is_test": false,
            "is_init": false,
            "size": 14236,
            "index": 19
          },
          {
            "id": "root__map_utils",
            "name": "map_utils",
            "stem": "map_utils",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "map_utils.py",
            "imports_count": 0,
            "importance": 0.25438912199850244,
            "is_test": false,
            "is_init": false,
            "size": 12405,
            "index": 20
          },
          {
            "id": "root__memory_manager",
            "name": "memory_manager",
            "stem": "memory_manager",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "memory_manager.py",
            "imports_count": 2,
            "importance": 0.273398013417415,
            "is_test": false,
            "is_init": false,
            "size": 14105,
            "index": 21
          },
          {
            "id": "root__migration_validation",
            "name": "migration_validation",
            "stem": "migration_validation",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "migration_validation.py",
            "imports_count": 1,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 8451,
            "index": 22
          },
          {
            "id": "root__options_exploration",
            "name": "options_exploration",
            "stem": "options_exploration",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "options_exploration.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 19788,
            "index": 23
          },
          {
            "id": "root__polyline_utils",
            "name": "polyline_utils",
            "stem": "polyline_utils",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "polyline_utils.py",
            "imports_count": 1,
            "importance": 0.25438912199850244,
            "is_test": false,
            "is_init": false,
            "size": 15171,
            "index": 24
          },
          {
            "id": "root__section_plot_professional",
            "name": "section_plot_professional",
            "stem": "section_plot_professional",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "section_plot_professional.py",
            "imports_count": 1,
            "importance": 0.4741682020954265,
            "is_test": false,
            "is_init": false,
            "size": 29723,
            "index": 25
          },
          {
            "id": "root__test_force_directed_layout",
            "name": "test_force_directed_layout",
            "stem": "test_force_directed_layout",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "test_force_directed_layout.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": true,
            "is_init": false,
            "size": 7430,
            "index": 26
          },
          {
            "id": "root__test_internal_imports",
            "name": "test_internal_imports",
            "stem": "test_internal_imports",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "test_internal_imports.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": true,
            "is_init": false,
            "size": 6669,
            "index": 27
          },
          {
            "id": "root__validate_features",
            "name": "validate_features",
            "stem": "validate_features",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "validate_features.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 3453,
            "index": 28
          },
          {
            "id": "root__workspace_audit",
            "name": "workspace_audit",
            "stem": "workspace_audit",
            "folder": "root",
            "color": "#E3F2FD",
            "file_path": "workspace_audit.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 5834,
            "index": 29
          },
          {
            "id": "callbacks__base",
            "name": "base (callbacks)",
            "stem": "base",
            "folder": "callbacks",
            "color": "#E8F5E8",
            "file_path": "callbacks\\base.py",
            "imports_count": 0,
            "importance": 0.4216919734641159,
            "is_test": false,
            "is_init": false,
            "size": 1528,
            "index": 30
          },
          {
            "id": "callbacks__file_upload",
            "name": "file_upload (callbacks)",
            "stem": "file_upload",
            "folder": "callbacks",
            "color": "#E8F5E8",
            "file_path": "callbacks\\file_upload.py",
            "imports_count": 6,
            "importance": 0.237963963393811,
            "is_test": false,
            "is_init": false,
            "size": 17399,
            "index": 31
          },
          {
            "id": "callbacks__map_interactions",
            "name": "map_interactions (callbacks)",
            "stem": "map_interactions",
            "folder": "callbacks",
            "color": "#E8F5E8",
            "file_path": "callbacks\\map_interactions.py",
            "imports_count": 8,
            "importance": 0.237963963393811,
            "is_test": false,
            "is_init": false,
            "size": 23327,
            "index": 32
          },
          {
            "id": "callbacks__marker_handling",
            "name": "marker_handling (callbacks)",
            "stem": "marker_handling",
            "folder": "callbacks",
            "color": "#E8F5E8",
            "file_path": "callbacks\\marker_handling.py",
            "imports_count": 4,
            "importance": 0.237963963393811,
            "is_test": false,
            "is_init": false,
            "size": 12731,
            "index": 33
          },
          {
            "id": "callbacks__plot_generation",
            "name": "plot_generation (callbacks)",
            "stem": "plot_generation",
            "folder": "callbacks",
            "color": "#E8F5E8",
            "file_path": "callbacks\\plot_generation.py",
            "imports_count": 6,
            "importance": 0.237963963393811,
            "is_test": false,
            "is_init": false,
            "size": 11066,
            "index": 34
          },
          {
            "id": "callbacks__search_functionality",
            "name": "search_functionality (callbacks)",
            "stem": "search_functionality",
            "folder": "callbacks",
            "color": "#E8F5E8",
            "file_path": "callbacks\\search_functionality.py",
            "imports_count": 5,
            "importance": 0.237963963393811,
            "is_test": false,
            "is_init": false,
            "size": 12485,
            "index": 35
          },
          {
            "id": "callbacks____init__",
            "name": "__init__ (callbacks)",
            "stem": "__init__",
            "folder": "callbacks",
            "color": "#E8F5E8",
            "file_path": "callbacks\\__init__.py",
            "imports_count": 6,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": true,
            "size": 4225,
            "index": 36
          },
          {
            "id": "graph_output__enhanced_dependency_graph",
            "name": "enhanced_dependency_graph (graph_output)",
            "stem": "enhanced_dependency_graph",
            "folder": "graph_output",
            "color": "#FAFAFA",
            "file_path": "graph_output\\enhanced_dependency_graph.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 67690,
            "index": 37
          },
          {
            "id": "graph_output__enhanced_dependency_graph_backup - Copy",
            "name": "enhanced_dependency_graph_backup - Copy (graph_output)",
            "stem": "enhanced_dependency_graph_backup - Copy",
            "folder": "graph_output",
            "color": "#FAFAFA",
            "file_path": "graph_output\\enhanced_dependency_graph_backup - Copy.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": false,
            "size": 56559,
            "index": 38
          },
          {
            "id": "graph_output__html_dependency_graph",
            "name": "html_dependency_graph (graph_output)",
            "stem": "html_dependency_graph",
            "folder": "graph_output",
            "color": "#FAFAFA",
            "file_path": "graph_output\\html_dependency_graph.py",
            "imports_count": 0,
            "importance": 0.38560583849216085,
            "is_test": false,
            "is_init": false,
            "size": 36597,
            "index": 39
          },
          {
            "id": "state_management__app_state",
            "name": "app_state (state_management)",
            "stem": "app_state",
            "folder": "state_management",
            "color": "#F3E5F5",
            "file_path": "state_management\\app_state.py",
            "imports_count": 1,
            "importance": 0.29702071343315095,
            "is_test": false,
            "is_init": false,
            "size": 10646,
            "index": 40
          },
          {
            "id": "state_management__state_models",
            "name": "state_models (state_management)",
            "stem": "state_models",
            "folder": "state_management",
            "color": "#F3E5F5",
            "file_path": "state_management\\state_models.py",
            "imports_count": 0,
            "importance": 0.5494883198513292,
            "is_test": false,
            "is_init": false,
            "size": 5982,
            "index": 41
          },
          {
            "id": "state_management____init__",
            "name": "__init__ (state_management)",
            "stem": "__init__",
            "folder": "state_management",
            "color": "#F3E5F5",
            "file_path": "state_management\\__init__.py",
            "imports_count": 2,
            "importance": 0.20843558837414103,
            "is_test": false,
            "is_init": true,
            "size": 513,
            "index": 42
          },
          {
            "id": "tests__test_graph_data_integrity",
            "name": "test_graph_data_integrity (tests)",
            "stem": "test_graph_data_integrity",
            "folder": "tests",
            "color": "#FFF3E0",
            "file_path": "tests\\test_graph_data_integrity.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": true,
            "is_init": false,
            "size": 21639,
            "index": 43
          },
          {
            "id": "tests__test_html_data_extraction",
            "name": "test_html_data_extraction (tests)",
            "stem": "test_html_data_extraction",
            "folder": "tests",
            "color": "#FFF3E0",
            "file_path": "tests\\test_html_data_extraction.py",
            "imports_count": 0,
            "importance": 0.20843558837414103,
            "is_test": true,
            "is_init": false,
            "size": 13810,
            "index": 44
          }
        ],
        "edges": [
          {
            "source": 0,
            "target": 2,
            "source_name": "root__app",
            "target_name": "root__app_factory",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 0,
            "target": 6,
            "source_name": "root__app",
            "target_name": "root__config",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 0,
            "target": 4,
            "source_name": "root__app",
            "target_name": "root__callbacks_split",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 3,
            "target": 25,
            "source_name": "root__borehole_log_professional",
            "target_name": "root__section_plot_professional",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 3,
            "target": 16,
            "source_name": "root__borehole_log_professional",
            "target_name": "root__geology_code_utils",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 7,
            "source_name": "root__callbacks_split",
            "target_name": "root__coordinate_service",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 1,
            "source_name": "root__callbacks_split",
            "target_name": "root__app_constants",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 3,
            "source_name": "root__callbacks_split",
            "target_name": "root__borehole_log_professional",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 24,
            "source_name": "root__callbacks_split",
            "target_name": "root__polyline_utils",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 19,
            "source_name": "root__callbacks_split",
            "target_name": "root__loading_indicators",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 21,
            "source_name": "root__callbacks_split",
            "target_name": "root__memory_manager",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 25,
            "source_name": "root__callbacks_split",
            "target_name": "root__section_plot_professional",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 6,
            "source_name": "root__callbacks_split",
            "target_name": "root__config",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 20,
            "source_name": "root__callbacks_split",
            "target_name": "root__map_utils",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 8,
            "source_name": "root__callbacks_split",
            "target_name": "root__dataframe_optimizer",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 4,
            "target": 9,
            "source_name": "root__callbacks_split",
            "target_name": "root__data_loader",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 5,
            "target": 21,
            "source_name": "root__comprehensive_optimization_validation",
            "target_name": "root__memory_manager",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 5,
            "target": 12,
            "source_name": "root__comprehensive_optimization_validation",
            "target_name": "root__enhanced_error_handling",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 5,
            "target": 8,
            "source_name": "root__comprehensive_optimization_validation",
            "target_name": "root__dataframe_optimizer",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 5,
            "target": 7,
            "source_name": "root__comprehensive_optimization_validation",
            "target_name": "root__coordinate_service",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 10,
            "target": 16,
            "source_name": "root__debug_module",
            "target_name": "root__geology_code_utils",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 11,
            "target": 3,
            "source_name": "root__debug_offset_layout",
            "target_name": "root__borehole_log_professional",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 12,
            "target": 7,
            "source_name": "root__enhanced_error_handling",
            "target_name": "root__coordinate_service",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 12,
            "target": 9,
            "source_name": "root__enhanced_error_handling",
            "target_name": "root__data_loader",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 14,
            "target": 1,
            "source_name": "root__error_recovery",
            "target_name": "root__app_constants",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 19,
            "target": 1,
            "source_name": "root__loading_indicators",
            "target_name": "root__app_constants",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 21,
            "target": 7,
            "source_name": "root__memory_manager",
            "target_name": "root__coordinate_service",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 21,
            "target": 18,
            "source_name": "root__memory_manager",
            "target_name": "root__lazy_marker_manager",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 22,
            "target": 39,
            "source_name": "root__migration_validation",
            "target_name": "graph_output__html_dependency_graph",
            "source_folder": "root",
            "target_folder": "graph_output",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 24,
            "target": 7,
            "source_name": "root__polyline_utils",
            "target_name": "root__coordinate_service",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 25,
            "target": 16,
            "source_name": "root__section_plot_professional",
            "target_name": "root__geology_code_utils",
            "source_folder": "root",
            "target_folder": "root",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 31,
            "target": 7,
            "source_name": "callbacks__file_upload",
            "target_name": "root__coordinate_service",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 31,
            "target": 1,
            "source_name": "callbacks__file_upload",
            "target_name": "root__app_constants",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 31,
            "target": 30,
            "source_name": "callbacks__file_upload",
            "target_name": "callbacks__base",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 31,
            "target": 6,
            "source_name": "callbacks__file_upload",
            "target_name": "root__config",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 31,
            "target": 13,
            "source_name": "callbacks__file_upload",
            "target_name": "root__error_handling",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 31,
            "target": 9,
            "source_name": "callbacks__file_upload",
            "target_name": "root__data_loader",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 32,
            "target": 7,
            "source_name": "callbacks__map_interactions",
            "target_name": "root__coordinate_service",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 32,
            "target": 18,
            "source_name": "callbacks__map_interactions",
            "target_name": "root__lazy_marker_manager",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 32,
            "target": 24,
            "source_name": "callbacks__map_interactions",
            "target_name": "root__polyline_utils",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 32,
            "target": 1,
            "source_name": "callbacks__map_interactions",
            "target_name": "root__app_constants",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 32,
            "target": 30,
            "source_name": "callbacks__map_interactions",
            "target_name": "callbacks__base",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 32,
            "target": 6,
            "source_name": "callbacks__map_interactions",
            "target_name": "root__config",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 32,
            "target": 20,
            "source_name": "callbacks__map_interactions",
            "target_name": "root__map_utils",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 32,
            "target": 13,
            "source_name": "callbacks__map_interactions",
            "target_name": "root__error_handling",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 33,
            "target": 1,
            "source_name": "callbacks__marker_handling",
            "target_name": "root__app_constants",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 33,
            "target": 3,
            "source_name": "callbacks__marker_handling",
            "target_name": "root__borehole_log_professional",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 33,
            "target": 13,
            "source_name": "callbacks__marker_handling",
            "target_name": "root__error_handling",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 33,
            "target": 30,
            "source_name": "callbacks__marker_handling",
            "target_name": "callbacks__base",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 34,
            "target": 7,
            "source_name": "callbacks__plot_generation",
            "target_name": "root__coordinate_service",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 34,
            "target": 1,
            "source_name": "callbacks__plot_generation",
            "target_name": "root__app_constants",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 34,
            "target": 30,
            "source_name": "callbacks__plot_generation",
            "target_name": "callbacks__base",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 34,
            "target": 25,
            "source_name": "callbacks__plot_generation",
            "target_name": "root__section_plot_professional",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 34,
            "target": 6,
            "source_name": "callbacks__plot_generation",
            "target_name": "root__config",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 34,
            "target": 13,
            "source_name": "callbacks__plot_generation",
            "target_name": "root__error_handling",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 35,
            "target": 7,
            "source_name": "callbacks__search_functionality",
            "target_name": "root__coordinate_service",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 35,
            "target": 3,
            "source_name": "callbacks__search_functionality",
            "target_name": "root__borehole_log_professional",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 35,
            "target": 30,
            "source_name": "callbacks__search_functionality",
            "target_name": "callbacks__base",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 35,
            "target": 6,
            "source_name": "callbacks__search_functionality",
            "target_name": "root__config",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 35,
            "target": 13,
            "source_name": "callbacks__search_functionality",
            "target_name": "root__error_handling",
            "source_folder": "callbacks",
            "target_folder": "root",
            "is_cross_folder": true,
            "is_test_related": false
          },
          {
            "source": 36,
            "target": 34,
            "source_name": "callbacks____init__",
            "target_name": "callbacks__plot_generation",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 36,
            "target": 33,
            "source_name": "callbacks____init__",
            "target_name": "callbacks__marker_handling",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 36,
            "target": 32,
            "source_name": "callbacks____init__",
            "target_name": "callbacks__map_interactions",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 36,
            "target": 30,
            "source_name": "callbacks____init__",
            "target_name": "callbacks__base",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 36,
            "target": 31,
            "source_name": "callbacks____init__",
            "target_name": "callbacks__file_upload",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 36,
            "target": 35,
            "source_name": "callbacks____init__",
            "target_name": "callbacks__search_functionality",
            "source_folder": "callbacks",
            "target_folder": "callbacks",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 40,
            "target": 41,
            "source_name": "state_management__app_state",
            "target_name": "state_management__state_models",
            "source_folder": "state_management",
            "target_folder": "state_management",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 42,
            "target": 40,
            "source_name": "state_management____init__",
            "target_name": "state_management__app_state",
            "source_folder": "state_management",
            "target_folder": "state_management",
            "is_cross_folder": false,
            "is_test_related": false
          },
          {
            "source": 42,
            "target": 41,
            "source_name": "state_management____init__",
            "target_name": "state_management__state_models",
            "source_folder": "state_management",
            "target_folder": "state_management",
            "is_cross_folder": false,
            "is_test_related": false
          }
        ],
        "dependencies": {
          "root__app": {
            "file_path": "app.py",
            "folder": "root",
            "stem": "app",
            "display_name": "app",
            "imports": [
              "root__app_factory",
              "root__config",
              "root__callbacks_split"
            ],
            "all_imports": [
              "callbacks_split",
              "sys",
              "logging",
              "datetime",
              "app_factory",
              "dash",
              "dash_leaflet",
              "config",
              "webbrowser"
            ],
            "imports_count": 9,
            "internal_imports_count": 3,
            "is_test": false,
            "is_init": false,
            "size": 23005
          },
          "root__app_constants": {
            "file_path": "app_constants.py",
            "folder": "root",
            "stem": "app_constants",
            "display_name": "app_constants",
            "imports": [],
            "all_imports": [],
            "imports_count": 0,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 8612
          },
          "root__app_factory": {
            "file_path": "app_factory.py",
            "folder": "root",
            "stem": "app_factory",
            "display_name": "app_factory",
            "imports": [],
            "all_imports": [
              "dash"
            ],
            "imports_count": 1,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 576
          },
          "root__borehole_log_professional": {
            "file_path": "borehole_log_professional.py",
            "folder": "root",
            "stem": "borehole_log_professional",
            "display_name": "borehole_log_professional",
            "imports": [
              "root__section_plot_professional",
              "root__geology_code_utils"
            ],
            "all_imports": [
              "geology_code_utils",
              "csv",
              "pandas",
              "matplotlib",
              "matplotlib.patches",
              "typing",
              "contextlib",
              "logging",
              "base64",
              "matplotlib.pyplot",
              "io",
              "numpy",
              "section_plot_professional",
              "textwrap"
            ],
            "imports_count": 14,
            "internal_imports_count": 2,
            "is_test": false,
            "is_init": false,
            "size": 63204
          },
          "root__callbacks_split": {
            "file_path": "callbacks_split.py",
            "folder": "root",
            "stem": "callbacks_split",
            "display_name": "callbacks_split",
            "imports": [
              "root__coordinate_service",
              "root__app_constants",
              "root__borehole_log_professional",
              "root__polyline_utils",
              "root__loading_indicators",
              "root__memory_manager",
              "root__section_plot_professional",
              "root__config",
              "root__map_utils",
              "root__dataframe_optimizer",
              "root__data_loader"
            ],
            "all_imports": [
              "app_constants",
              "pandas",
              "map_utils",
              "datetime",
              "matplotlib",
              "dataframe_optimizer",
              "logging",
              "sklearn.decomposition",
              "matplotlib.pyplot",
              "loading_indicators",
              "polyline_utils",
              "traceback",
              "coordinate_service",
              "dash",
              "io",
              "config",
              "data_loader",
              "numpy",
              "statistics",
              "dash_leaflet",
              "base64",
              "memory_manager",
              "borehole_log_professional",
              "section_plot_professional"
            ],
            "imports_count": 24,
            "internal_imports_count": 11,
            "is_test": false,
            "is_init": false,
            "size": 98589
          },
          "root__comprehensive_optimization_validation": {
            "file_path": "comprehensive_optimization_validation.py",
            "folder": "root",
            "stem": "comprehensive_optimization_validation",
            "display_name": "comprehensive_optimization_validation",
            "imports": [
              "root__memory_manager",
              "root__enhanced_error_handling",
              "root__dataframe_optimizer",
              "root__coordinate_service"
            ],
            "all_imports": [
              "coordinate_service",
              "pandas",
              "matplotlib",
              "sys",
              "dataframe_optimizer",
              "logging",
              "enhanced_error_handling",
              "matplotlib.pyplot",
              "io",
              "numpy",
              "memory_manager",
              "traceback",
              "time"
            ],
            "imports_count": 13,
            "internal_imports_count": 4,
            "is_test": false,
            "is_init": false,
            "size": 24553
          },
          "root__config": {
            "file_path": "config.py",
            "folder": "root",
            "stem": "config",
            "display_name": "config",
            "imports": [],
            "all_imports": [],
            "imports_count": 0,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 23646
          },
          "root__coordinate_service": {
            "file_path": "coordinate_service.py",
            "folder": "root",
            "stem": "coordinate_service",
            "display_name": "coordinate_service",
            "imports": [],
            "all_imports": [
              "pandas",
              "typing",
              "logging",
              "numpy",
              "functools",
              "pyproj"
            ],
            "imports_count": 6,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 13690
          },
          "root__dataframe_optimizer": {
            "file_path": "dataframe_optimizer.py",
            "folder": "root",
            "stem": "dataframe_optimizer",
            "display_name": "dataframe_optimizer",
            "imports": [],
            "all_imports": [
              "numpy",
              "typing",
              "pandas",
              "logging"
            ],
            "imports_count": 4,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 10995
          },
          "root__data_loader": {
            "file_path": "data_loader.py",
            "folder": "root",
            "stem": "data_loader",
            "display_name": "data_loader",
            "imports": [],
            "all_imports": [
              "os",
              "csv",
              "pandas"
            ],
            "imports_count": 3,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 1730
          },
          "root__debug_module": {
            "file_path": "debug_module.py",
            "folder": "root",
            "stem": "debug_module",
            "display_name": "debug_module",
            "imports": [
              "root__geology_code_utils"
            ],
            "all_imports": [
              "geology_code_utils",
              "pandas",
              "matplotlib.patches",
              "typing",
              "logging",
              "matplotlib.pyplot"
            ],
            "imports_count": 6,
            "internal_imports_count": 1,
            "is_test": false,
            "is_init": false,
            "size": 1122
          },
          "root__debug_offset_layout": {
            "file_path": "debug_offset_layout.py",
            "folder": "root",
            "stem": "debug_offset_layout",
            "display_name": "debug_offset_layout",
            "imports": [
              "root__borehole_log_professional"
            ],
            "all_imports": [
              "sys",
              "traceback",
              "borehole_log_professional",
              "logging"
            ],
            "imports_count": 4,
            "internal_imports_count": 1,
            "is_test": false,
            "is_init": false,
            "size": 1803
          },
          "root__enhanced_error_handling": {
            "file_path": "enhanced_error_handling.py",
            "folder": "root",
            "stem": "enhanced_error_handling",
            "display_name": "enhanced_error_handling",
            "imports": [
              "root__coordinate_service",
              "root__data_loader"
            ],
            "all_imports": [
              "coordinate_service",
              "enum",
              "typing",
              "logging",
              "dataclasses",
              "data_loader",
              "functools",
              "time"
            ],
            "imports_count": 8,
            "internal_imports_count": 2,
            "is_test": false,
            "is_init": false,
            "size": 12371
          },
          "root__error_handling": {
            "file_path": "error_handling.py",
            "folder": "root",
            "stem": "error_handling",
            "display_name": "error_handling",
            "imports": [],
            "all_imports": [
              "enum",
              "typing",
              "logging",
              "datetime",
              "dataclasses",
              "dash",
              "traceback"
            ],
            "imports_count": 7,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 13039
          },
          "root__error_recovery": {
            "file_path": "error_recovery.py",
            "folder": "root",
            "stem": "error_recovery",
            "display_name": "error_recovery",
            "imports": [
              "root__app_constants"
            ],
            "all_imports": [
              "app_constants",
              "contextlib",
              "typing",
              "logging",
              "functools",
              "traceback",
              "time"
            ],
            "imports_count": 7,
            "internal_imports_count": 1,
            "is_test": false,
            "is_init": false,
            "size": 16853
          },
          "root__final_validation": {
            "file_path": "final_validation.py",
            "folder": "root",
            "stem": "final_validation",
            "display_name": "final_validation",
            "imports": [],
            "all_imports": [
              "json",
              "pathlib"
            ],
            "imports_count": 2,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 3910
          },
          "root__geology_code_utils": {
            "file_path": "geology_code_utils.py",
            "folder": "root",
            "stem": "geology_code_utils",
            "display_name": "geology_code_utils",
            "imports": [],
            "all_imports": [
              "os",
              "csv"
            ],
            "imports_count": 2,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 1795
          },
          "root__interactive_validation": {
            "file_path": "interactive_validation.py",
            "folder": "root",
            "stem": "interactive_validation",
            "display_name": "interactive_validation",
            "imports": [],
            "all_imports": [
              "json",
              "re",
              "datetime"
            ],
            "imports_count": 3,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 22052
          },
          "root__lazy_marker_manager": {
            "file_path": "lazy_marker_manager.py",
            "folder": "root",
            "stem": "lazy_marker_manager",
            "display_name": "lazy_marker_manager",
            "imports": [],
            "all_imports": [
              "pandas",
              "typing",
              "logging",
              "dataclasses",
              "dash_leaflet"
            ],
            "imports_count": 5,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 16437
          },
          "root__loading_indicators": {
            "file_path": "loading_indicators.py",
            "folder": "root",
            "stem": "loading_indicators",
            "display_name": "loading_indicators",
            "imports": [
              "root__app_constants"
            ],
            "all_imports": [
              "typing",
              "app_constants",
              "dash",
              "time"
            ],
            "imports_count": 4,
            "internal_imports_count": 1,
            "is_test": false,
            "is_init": false,
            "size": 14236
          },
          "root__map_utils": {
            "file_path": "map_utils.py",
            "folder": "root",
            "stem": "map_utils",
            "display_name": "map_utils",
            "imports": [],
            "all_imports": [
              "pandas",
              "shapely.ops",
              "logging",
              "pyproj",
              "shapely.geometry"
            ],
            "imports_count": 5,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 12405
          },
          "root__memory_manager": {
            "file_path": "memory_manager.py",
            "folder": "root",
            "stem": "memory_manager",
            "display_name": "memory_manager",
            "imports": [
              "root__coordinate_service",
              "root__lazy_marker_manager"
            ],
            "all_imports": [
              "psutil",
              "coordinate_service",
              "pandas",
              "sys",
              "typing",
              "gc",
              "logging",
              "datetime",
              "dataclasses",
              "lazy_marker_manager"
            ],
            "imports_count": 10,
            "internal_imports_count": 2,
            "is_test": false,
            "is_init": false,
            "size": 14105
          },
          "root__migration_validation": {
            "file_path": "migration_validation.py",
            "folder": "root",
            "stem": "migration_validation",
            "display_name": "migration_validation",
            "imports": [
              "graph_output__html_dependency_graph"
            ],
            "all_imports": [
              "os",
              "html_dependency_graph",
              "sys",
              "json",
              "time"
            ],
            "imports_count": 5,
            "internal_imports_count": 1,
            "is_test": false,
            "is_init": false,
            "size": 8451
          },
          "root__options_exploration": {
            "file_path": "options_exploration.py",
            "folder": "root",
            "stem": "options_exploration",
            "display_name": "options_exploration",
            "imports": [],
            "all_imports": [
              "json",
              "math"
            ],
            "imports_count": 2,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 19788
          },
          "root__polyline_utils": {
            "file_path": "polyline_utils.py",
            "folder": "root",
            "stem": "polyline_utils",
            "display_name": "polyline_utils",
            "imports": [
              "root__coordinate_service"
            ],
            "all_imports": [
              "coordinate_service",
              "pandas",
              "shapely.ops",
              "logging",
              "dash_leaflet",
              "pyproj",
              "numpy",
              "shapely.geometry"
            ],
            "imports_count": 8,
            "internal_imports_count": 1,
            "is_test": false,
            "is_init": false,
            "size": 15171
          },
          "root__section_plot_professional": {
            "file_path": "section_plot_professional.py",
            "folder": "root",
            "stem": "section_plot_professional",
            "display_name": "section_plot_professional",
            "imports": [
              "root__geology_code_utils"
            ],
            "all_imports": [
              "geology_code_utils",
              "csv",
              "pandas",
              "matplotlib",
              "matplotlib.patches",
              "typing",
              "contextlib",
              "matplotlib.ticker",
              "logging",
              "base64",
              "matplotlib.pyplot",
              "io",
              "numpy",
              "shapely.geometry",
              "re",
              "pyproj"
            ],
            "imports_count": 16,
            "internal_imports_count": 1,
            "is_test": false,
            "is_init": false,
            "size": 29723
          },
          "root__test_force_directed_layout": {
            "file_path": "test_force_directed_layout.py",
            "folder": "root",
            "stem": "test_force_directed_layout",
            "display_name": "test_force_directed_layout",
            "imports": [],
            "all_imports": [
              "os",
              "re",
              "pathlib"
            ],
            "imports_count": 3,
            "internal_imports_count": 0,
            "is_test": true,
            "is_init": false,
            "size": 7430
          },
          "root__test_internal_imports": {
            "file_path": "test_internal_imports.py",
            "folder": "root",
            "stem": "test_internal_imports",
            "display_name": "test_internal_imports",
            "imports": [],
            "all_imports": [
              "typing",
              "json",
              "ast",
              "pathlib"
            ],
            "imports_count": 4,
            "internal_imports_count": 0,
            "is_test": true,
            "is_init": false,
            "size": 6669
          },
          "root__validate_features": {
            "file_path": "validate_features.py",
            "folder": "root",
            "stem": "validate_features",
            "display_name": "validate_features",
            "imports": [],
            "all_imports": [
              "os",
              "json",
              "pathlib"
            ],
            "imports_count": 3,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 3453
          },
          "root__workspace_audit": {
            "file_path": "workspace_audit.py",
            "folder": "root",
            "stem": "workspace_audit",
            "display_name": "workspace_audit",
            "imports": [],
            "all_imports": [
              "typing",
              "json",
              "ast",
              "pathlib"
            ],
            "imports_count": 4,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 5834
          },
          "callbacks__base": {
            "file_path": "callbacks\\base.py",
            "folder": "callbacks",
            "stem": "base",
            "display_name": "base (callbacks)",
            "imports": [],
            "all_imports": [
              "abc",
              "logging"
            ],
            "imports_count": 2,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 1528
          },
          "callbacks__file_upload": {
            "file_path": "callbacks\\file_upload.py",
            "folder": "callbacks",
            "stem": "file_upload",
            "display_name": "file_upload (callbacks)",
            "imports": [
              "root__coordinate_service",
              "root__app_constants",
              "callbacks__base",
              "root__config",
              "root__error_handling",
              "root__data_loader"
            ],
            "all_imports": [
              "app_constants",
              "coordinate_service",
              "statistics",
              "pandas",
              "typing",
              "datetime",
              "logging",
              "base",
              "state_management",
              "base64",
              "dash",
              "data_loader",
              "error_handling",
              "dash_leaflet",
              "config"
            ],
            "imports_count": 15,
            "internal_imports_count": 6,
            "is_test": false,
            "is_init": false,
            "size": 17399
          },
          "callbacks__map_interactions": {
            "file_path": "callbacks\\map_interactions.py",
            "folder": "callbacks",
            "stem": "map_interactions",
            "display_name": "map_interactions (callbacks)",
            "imports": [
              "root__coordinate_service",
              "root__lazy_marker_manager",
              "root__polyline_utils",
              "root__app_constants",
              "callbacks__base",
              "root__config",
              "root__map_utils",
              "root__error_handling"
            ],
            "all_imports": [
              "app_constants",
              "coordinate_service",
              "pandas",
              "map_utils",
              "typing",
              "datetime",
              "logging",
              "sklearn.decomposition",
              "base",
              "state_management",
              "lazy_marker_manager",
              "dash",
              "dash_leaflet",
              "error_handling",
              "config",
              "polyline_utils"
            ],
            "imports_count": 16,
            "internal_imports_count": 8,
            "is_test": false,
            "is_init": false,
            "size": 23327
          },
          "callbacks__marker_handling": {
            "file_path": "callbacks\\marker_handling.py",
            "folder": "callbacks",
            "stem": "marker_handling",
            "display_name": "marker_handling (callbacks)",
            "imports": [
              "root__app_constants",
              "root__borehole_log_professional",
              "root__error_handling",
              "callbacks__base"
            ],
            "all_imports": [
              "app_constants",
              "pandas",
              "logging",
              "base",
              "state_management",
              "dash_leaflet",
              "dash",
              "error_handling",
              "borehole_log_professional"
            ],
            "imports_count": 9,
            "internal_imports_count": 4,
            "is_test": false,
            "is_init": false,
            "size": 12731
          },
          "callbacks__plot_generation": {
            "file_path": "callbacks\\plot_generation.py",
            "folder": "callbacks",
            "stem": "plot_generation",
            "display_name": "plot_generation (callbacks)",
            "imports": [
              "root__coordinate_service",
              "root__app_constants",
              "callbacks__base",
              "root__section_plot_professional",
              "root__config",
              "root__error_handling"
            ],
            "all_imports": [
              "app_constants",
              "coordinate_service",
              "pandas",
              "datetime",
              "logging",
              "base",
              "state_management",
              "dash",
              "base64",
              "io",
              "matplotlib.pyplot",
              "error_handling",
              "config",
              "section_plot_professional",
              "shapely.geometry"
            ],
            "imports_count": 15,
            "internal_imports_count": 6,
            "is_test": false,
            "is_init": false,
            "size": 11066
          },
          "callbacks__search_functionality": {
            "file_path": "callbacks\\search_functionality.py",
            "folder": "callbacks",
            "stem": "search_functionality",
            "display_name": "search_functionality (callbacks)",
            "imports": [
              "root__coordinate_service",
              "root__borehole_log_professional",
              "callbacks__base",
              "root__config",
              "root__error_handling"
            ],
            "all_imports": [
              "coordinate_service",
              "pandas",
              "logging",
              "base",
              "state_management",
              "dash",
              "error_handling",
              "config",
              "borehole_log_professional"
            ],
            "imports_count": 9,
            "internal_imports_count": 5,
            "is_test": false,
            "is_init": false,
            "size": 12485
          },
          "callbacks____init__": {
            "file_path": "callbacks\\__init__.py",
            "folder": "callbacks",
            "stem": "__init__",
            "display_name": "__init__ (callbacks)",
            "imports": [
              "callbacks__plot_generation",
              "callbacks__marker_handling",
              "callbacks__map_interactions",
              "callbacks__base",
              "callbacks__file_upload",
              "callbacks__search_functionality"
            ],
            "all_imports": [
              "file_upload",
              "typing",
              "plot_generation",
              "search_functionality",
              "logging",
              "base",
              "map_interactions",
              "marker_handling"
            ],
            "imports_count": 8,
            "internal_imports_count": 6,
            "is_test": false,
            "is_init": true,
            "size": 4225
          },
          "graph_output__enhanced_dependency_graph": {
            "file_path": "graph_output\\enhanced_dependency_graph.py",
            "folder": "graph_output",
            "stem": "enhanced_dependency_graph",
            "display_name": "enhanced_dependency_graph (graph_output)",
            "imports": [],
            "all_imports": [
              "os",
              "typing",
              "ast",
              "json",
              "pathlib"
            ],
            "imports_count": 5,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 67690
          },
          "graph_output__enhanced_dependency_graph_backup - Copy": {
            "file_path": "graph_output\\enhanced_dependency_graph_backup - Copy.py",
            "folder": "graph_output",
            "stem": "enhanced_dependency_graph_backup - Copy",
            "display_name": "enhanced_dependency_graph_backup - Copy (graph_output)",
            "imports": [],
            "all_imports": [
              "os",
              "typing",
              "ast",
              "json",
              "pathlib"
            ],
            "imports_count": 5,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 56559
          },
          "graph_output__html_dependency_graph": {
            "file_path": "graph_output\\html_dependency_graph.py",
            "folder": "graph_output",
            "stem": "html_dependency_graph",
            "display_name": "html_dependency_graph (graph_output)",
            "imports": [],
            "all_imports": [
              "os",
              "typing",
              "ast",
              "json",
              "pathlib"
            ],
            "imports_count": 5,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 36597
          },
          "state_management__app_state": {
            "file_path": "state_management\\app_state.py",
            "folder": "state_management",
            "stem": "app_state",
            "display_name": "app_state (state_management)",
            "imports": [
              "state_management__state_models"
            ],
            "all_imports": [
              "state_models",
              "pandas",
              "typing",
              "datetime",
              "logging",
              "threading"
            ],
            "imports_count": 6,
            "internal_imports_count": 1,
            "is_test": false,
            "is_init": false,
            "size": 10646
          },
          "state_management__state_models": {
            "file_path": "state_management\\state_models.py",
            "folder": "state_management",
            "stem": "state_models",
            "display_name": "state_models (state_management)",
            "imports": [],
            "all_imports": [
              "typing",
              "dataclasses",
              "pandas",
              "datetime"
            ],
            "imports_count": 4,
            "internal_imports_count": 0,
            "is_test": false,
            "is_init": false,
            "size": 5982
          },
          "state_management____init__": {
            "file_path": "state_management\\__init__.py",
            "folder": "state_management",
            "stem": "__init__",
            "display_name": "__init__ (state_management)",
            "imports": [
              "state_management__app_state",
              "state_management__state_models"
            ],
            "all_imports": [
              "app_state",
              "state_models"
            ],
            "imports_count": 2,
            "internal_imports_count": 2,
            "is_test": false,
            "is_init": true,
            "size": 513
          },
          "tests__test_graph_data_integrity": {
            "file_path": "tests\\test_graph_data_integrity.py",
            "folder": "tests",
            "stem": "test_graph_data_integrity",
            "display_name": "test_graph_data_integrity (tests)",
            "imports": [],
            "all_imports": [
              "os",
              "sys",
              "typing",
              "ast",
              "traceback",
              "json",
              "html",
              "graph_output.enhanced_dependency_graph",
              "re",
              "pathlib"
            ],
            "imports_count": 10,
            "internal_imports_count": 0,
            "is_test": true,
            "is_init": false,
            "size": 21639
          },
          "tests__test_html_data_extraction": {
            "file_path": "tests\\test_html_data_extraction.py",
            "folder": "tests",
            "stem": "test_html_data_extraction",
            "display_name": "test_html_data_extraction (tests)",
            "imports": [],
            "all_imports": [
              "typing",
              "ast",
              "json",
              "html",
              "re",
              "pathlib"
            ],
            "imports_count": 6,
            "internal_imports_count": 0,
            "is_test": true,
            "is_init": false,
            "size": 13810
          }
        },
        "subfolder_info": {
          "root": {
            "color": "#E3F2FD",
            "modules": [
              "app",
              "app_constants",
              "app_factory",
              "borehole_log_professional",
              "callbacks_split",
              "comprehensive_optimization_validation",
              "config",
              "coordinate_service",
              "dataframe_optimizer",
              "data_loader",
              "debug_module",
              "debug_offset_layout",
              "enhanced_error_handling",
              "error_handling",
              "error_recovery",
              "final_validation",
              "geology_code_utils",
              "interactive_validation",
              "lazy_marker_manager",
              "loading_indicators",
              "map_utils",
              "memory_manager",
              "migration_validation",
              "options_exploration",
              "polyline_utils",
              "section_plot_professional",
              "test_force_directed_layout",
              "test_internal_imports",
              "validate_features",
              "workspace_audit"
            ],
            "test_modules": [
              "test_force_directed_layout",
              "test_internal_imports"
            ],
            "count": 30
          },
          "archive": {
            "color": "#FFEBEE",
            "modules": [],
            "test_modules": [],
            "count": 0
          },
          "callbacks": {
            "color": "#E8F5E8",
            "modules": [
              "base (callbacks)",
              "file_upload (callbacks)",
              "map_interactions (callbacks)",
              "marker_handling (callbacks)",
              "plot_generation (callbacks)",
              "search_functionality (callbacks)",
              "__init__ (callbacks)"
            ],
            "test_modules": [],
            "count": 7
          },
          "flowchart_visualization": {
            "color": "#E0F2F1",
            "modules": [],
            "test_modules": [],
            "count": 0
          },
          "graph_output": {
            "color": "#FAFAFA",
            "modules": [
              "enhanced_dependency_graph (graph_output)",
              "enhanced_dependency_graph_backup - Copy (graph_output)",
              "html_dependency_graph (graph_output)"
            ],
            "test_modules": [],
            "count": 3
          },
          "old_streamlit_files": {
            "color": "#FFF8E1",
            "modules": [],
            "test_modules": [],
            "count": 0
          },
          "state_management": {
            "color": "#F3E5F5",
            "modules": [
              "app_state (state_management)",
              "state_models (state_management)",
              "__init__ (state_management)"
            ],
            "test_modules": [],
            "count": 3
          },
          "tests": {
            "color": "#FFF3E0",
            "modules": [
              "test_graph_data_integrity (tests)",
              "test_html_data_extraction (tests)"
            ],
            "test_modules": [
              "test_graph_data_integrity (tests)",
              "test_html_data_extraction (tests)"
            ],
            "count": 2
          },
          "assets": {
            "color": "#F1F8E9",
            "modules": [],
            "test_modules": [],
            "count": 0
          },
          "reports": {
            "color": "#FCE4EC",
            "modules": [],
            "test_modules": [],
            "count": 0
          }
        },
        "importance_scores": {
          "root__app": 0.20843558837414103,
          "root__app_constants": 0.7442894705540105,
          "root__app_factory": 0.26749233841348097,
          "root__borehole_log_professional": 0.4972969170040625,
          "root__callbacks_split": 0.26749233841348097,
          "root__comprehensive_optimization_validation": 0.20843558837414103,
          "root__config": 0.42132286877637004,
          "root__coordinate_service": 0.8463930548017131,
          "root__dataframe_optimizer": 0.273398013417415,
          "root__data_loader": 0.3702264765027494,
          "root__debug_module": 0.20843558837414103,
          "root__debug_offset_layout": 0.20843558837414103,
          "root__enhanced_error_handling": 0.252728150903646,
          "root__error_handling": 0.3921635984444459,
          "root__error_recovery": 0.20843558837414103,
          "root__final_validation": 0.20843558837414103,
          "root__geology_code_utils": 1.0,
          "root__interactive_validation": 0.20843558837414103,
          "root__lazy_marker_manager": 0.3499134151871348,
          "root__loading_indicators": 0.22910545088791,
          "root__map_utils": 0.25438912199850244,
          "root__memory_manager": 0.273398013417415,
          "root__migration_validation": 0.20843558837414103,
          "root__options_exploration": 0.20843558837414103,
          "root__polyline_utils": 0.25438912199850244,
          "root__section_plot_professional": 0.4741682020954265,
          "root__test_force_directed_layout": 0.20843558837414103,
          "root__test_internal_imports": 0.20843558837414103,
          "root__validate_features": 0.20843558837414103,
          "root__workspace_audit": 0.20843558837414103,
          "callbacks__base": 0.4216919734641159,
          "callbacks__file_upload": 0.237963963393811,
          "callbacks__map_interactions": 0.237963963393811,
          "callbacks__marker_handling": 0.237963963393811,
          "callbacks__plot_generation": 0.237963963393811,
          "callbacks__search_functionality": 0.237963963393811,
          "callbacks____init__": 0.20843558837414103,
          "graph_output__enhanced_dependency_graph": 0.20843558837414103,
          "graph_output__enhanced_dependency_graph_backup - Copy": 0.20843558837414103,
          "graph_output__html_dependency_graph": 0.38560583849216085,
          "state_management__app_state": 0.29702071343315095,
          "state_management__state_models": 0.5494883198513292,
          "state_management____init__": 0.20843558837414103,
          "tests__test_graph_data_integrity": 0.20843558837414103,
          "tests__test_html_data_extraction": 0.20843558837414103
        },
        "statistics": {
          "total_files": 45,
          "total_dependencies": 69,
          "cross_folder_dependencies": 25,
          "test_files": 4,
          "folders": 10
        }
      }
    },
    "json_serialization": {
      "success": true,
      "json_size": 67561,
      "json_string": "{\n  \"nodes\": [\n    {\n      \"id\": \"root__app\",\n      \"name\": \"app\",\n      \"stem\": \"app\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"app.py\",\n      \"imports_count\": 3,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 23005,\n      \"index\": 0\n    },\n    {\n      \"id\": \"root__app_constants\",\n      \"name\": \"app_constants\",\n      \"stem\": \"app_constants\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"app_constants.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.7442894705540105,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 8612,\n      \"index\": 1\n    },\n    {\n      \"id\": \"root__app_factory\",\n      \"name\": \"app_factory\",\n      \"stem\": \"app_factory\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"app_factory.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.26749233841348097,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 576,\n     ..."
    },
    "html_injection": {
      "success": true,
      "html_size": 117630,
      "html_content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Enhanced Dependency Graph</title>\n    <script src=\"https://d3js.org/d3.v7.min.js\"></script>\n    <style>\n        body {\n            margin: 0;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background: #f8f9fa;\n        }\n        \n        .container {\n            display: flex;\n            height: 100vh;\n            overflow: hidden;\n        }\n        \n        .controls {\n            width: 380px;  /* Increased width for new controls */\n            background: white;\n            border-right: 2px solid #e9ecef;\n            padding: 20px;\n            overflow-y: auto;\n            box-shadow: 2px 0 8px rgba(0,0,0,0.1);\n        }\n        \n        .graph-container {\n            flex: 1;\n            position: relative;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        }\n        \n        #graph {\n            width: 100%;\n            height: 100%;\n            background: white;\n            cursor: grab;\n        }\n        \n        #graph:active {\n            cursor: grabbing;\n        }\n        \n        /* Enhanced node styles */\n        .node-rect {\n            stroke: #333;\n            stroke-width: 1.5;\n            rx: 8;\n            ry: 8;\n            filter: drop-shadow(2px 2px 4px rgba(0,0,0,0.2));\n            transition: all 0.2s ease;\n        }\n        \n        .node-rect:hover {\n            stroke-width: 2.5;\n            filter: drop-shadow(3px 3px 8px rgba(0,0,0,0.3));\n        }\n        \n        .node-rect.highlighted {\n            stroke: #ff6600;\n            stroke-width: 3;\n            filter: drop-shadow(0 0 12px rgba(255,102,0,0.6));\n        }\n        \n        .node-rect.dimmed {\n            opacity: 0.3;\n        }\n        \n        /* Enhanced link styles */\n        .link {\n            fill: none;\n            stroke: #666;\n            stroke-width: 1.5;\n            opacity: 0.8;\n            transition: all 0.3s ease;\n        }\n        \n        .link:hover {\n            stroke-width: 2.5;\n            opacity: 1;\n        }\n        \n        .link.highlighted {\n            stroke: #ff6600;\n            stroke-width: 3;\n            opacity: 1;\n        }\n        \n        .link.dimmed {\n            opacity: 0.2;\n        }\n        \n        .link.hidden {\n            display: none;\n        }\n        \n        .link.test-related {\n            stroke-dasharray: 4,4;\n        }\n        \n        /* Enhanced text styles */\n        .node-label {\n            font-size: 11px;\n            font-weight: 600;\n            text-anchor: middle;\n            pointer-events: none;\n            fill: #333;\n        }\n        \n        .folder-label-text {\n            font-size: 9px;\n            text-anchor: middle;\n            pointer-events: none;\n            fill: #666;\n            font-style: italic;\n        }\n        \n        /* Control panel styles */\n        .section {\n            margin-bottom: 25px;\n            padding: 15px;\n            background: #f8f9fa;\n            border-radius: 8px;\n            border: 1px solid #e9ecef;\n        }\n        \n        .section h3 {\n            margin: 0 0 15px 0;\n            color: #495057;\n            font-size: 14px;\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n        }\n        \n        .folder-item {\n            display: flex;\n            align-items: center;\n            padding: 8px 12px;\n            margin: 4px 0;\n            background: white;\n            border: 1px solid #dee2e6;\n            border-radius: 6px;\n            cursor: pointer;\n            transition: all 0.2s ease;\n        }\n        \n        .folder-item:hover {\n            background: #e3f2fd;\n            border-color: #90caf9;\n        }\n        \n        .folder-checkbox {\n            font-size: 16px;\n            margin-right: 10px;\n            user-select: none;\n        }\n        \n        .folder-color {\n            width: 20px;\n            height: 20px;\n            border-radius: 4px;\n            margin-right: 10px;\n            border: 1px solid #dee2e6;\n        }\n        \n        .folder-label {\n            flex: 1;\n            font-size: 13px;\n            font-weight: 500;\n        }\n        \n        .folder-count {\n            font-weight: normal;\n            color: #6c757d;\n            font-size: 11px;\n        }\n        \n        .test-count {\n            font-weight: normal;\n            color: #fd7e14;\n            font-size: 11px;\n        }\n        \n        .reset-button {\n            background: #007bff;\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-weight: 500;\n            transition: background 0.2s ease;\n            width: 100%;\n        }\n        \n        .reset-button:hover {\n            background: #0056b3;\n        }\n        \n        .stats-grid {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 10px;\n        }\n        \n        .stat-item {\n            background: white;\n            padding: 8px;\n            border-radius: 4px;\n            text-align: center;\n            border: 1px solid #dee2e6;\n        }\n        \n        .stat-value {\n            font-size: 18px;\n            font-weight: bold;\n            color: #007bff;\n        }\n        \n        .stat-label {\n            font-size: 11px;\n            color: #6c757d;\n            text-transform: uppercase;\n        }\n        \n        /* Tooltip styles */\n        .tooltip {\n            position: absolute;\n            background: rgba(0, 0, 0, 0.9);\n            color: white;\n            padding: 10px;\n            border-radius: 6px;\n            pointer-events: none;\n            font-size: 12px;\n            max-width: 300px;\n            z-index: 1000;\n            opacity: 0;\n            transition: opacity 0.2s ease;\n        }\n        \n        .importance-indicator {\n            position: absolute;\n            top: -8px;\n            right: -8px;\n            width: 16px;\n            height: 16px;\n            border-radius: 50%;\n            background: #ffc107;\n            border: 2px solid white;\n            display: none;\n        }\n        \n        .importance-indicator.high {\n            display: block;\n            background: #dc3545;\n        }\n        \n        .importance-indicator.medium {\n            display: block;\n            background: #fd7e14;\n        }\n        \n        .importance-indicator.low {\n            display: block;\n            background: #ffc107;\n        }\n        \n        /* Layout toggle styles */\n        .layout-toggle {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            padding: 12px;\n            background: white;\n            border: 1px solid #dee2e6;\n            border-radius: 6px;\n            margin-bottom: 15px;\n        }\n        \n        .layout-toggle-label {\n            font-size: 13px;\n            font-weight: 500;\n            color: #495057;\n        }\n        \n        .toggle-switch {\n            position: relative;\n            width: 50px;\n            height: 24px;\n            background-color: #ccc;\n            border-radius: 12px;\n            cursor: pointer;\n            transition: background-color 0.3s ease;\n        }\n        \n        .toggle-switch.active {\n            background-color: #007bff;\n        }\n        \n        .toggle-slider {\n            position: absolute;\n            top: 2px;\n            left: 2px;\n            width: 20px;\n            height: 20px;\n            background-color: white;\n            border-radius: 50%;\n            transition: transform 0.3s ease;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        \n        .toggle-switch.active .toggle-slider {\n            transform: translateX(26px);\n        }\n        \n        .layout-mode-indicator {\n            font-size: 11px;\n            color: #6c757d;\n            margin-top: 5px;\n            text-align: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"controls\">\n            <div class=\"section\">\n                <h3>\ud83d\udcca Statistics</h3>\n                <div id=\"stats-content\" class=\"stats-grid\"></div>\n            </div>\n            \n            <div class=\"section\">\n                <h3>\ud83c\udf9b\ufe0f Layout Control</h3>\n                <div class=\"layout-toggle\" id=\"layout-toggle\">\n                    <span class=\"layout-toggle-label\">\ud83d\udcd0 Hierarchical</span>\n                    <div class=\"toggle-switch\" id=\"toggle-switch\">\n                        <div class=\"toggle-slider\"></div>\n                    </div>\n                    <span class=\"layout-toggle-label\">\ud83c\udf10 Force-Directed</span>\n                </div>\n                <div class=\"layout-mode-indicator\" id=\"layout-indicator\">\n                    Current: Hierarchical Layout\n                </div>\n            </div>\n            \n            <div class=\"section\">\n                <h3>\ud83d\udcc1 Directories</h3>\n                <div class=\"folder-item\" id=\"select-all-toggle\" role=\"checkbox\" tabindex=\"0\" style=\"border-bottom: 1px solid #e9ecef; margin-bottom: 10px; padding-bottom: 8px; font-weight: bold;\">\n                    <span class=\"folder-checkbox\">\u2611</span>\n                    <span class=\"folder-label\">Select All Directories</span>\n                </div>\n                <div id=\"folder-controls\"></div>\n            </div>\n            \n            <div class=\"section\">\n                <h3>\ud83d\udd0d Advanced Filters</h3>\n                <div style=\"margin-bottom: 15px;\">\n                    <label for=\"imports-filter\" style=\"display: block; font-size: 0.9em; margin-bottom: 5px; color: #6c757d;\">\n                        \ud83d\udce5 Max Internal Imports:\n                    </label>\n                    <input type=\"range\" id=\"imports-filter\" min=\"0\" max=\"20\" value=\"20\" style=\"width: 100%; margin-bottom: 5px;\">\n                    <div style=\"font-size: 0.8em; color: #6c757d; text-align: center;\">\n                        <span id=\"imports-filter-value\">20</span> imports\n                    </div>\n                </div>\n                \n                <div style=\"margin-bottom: 15px;\">\n                    <label for=\"dependencies-filter\" style=\"display: block; font-size: 0.9em; margin-bottom: 5px; color: #6c757d;\">\n                        \ud83d\udce4 Max Dependencies (outgoing):\n                    </label>\n                    <input type=\"range\" id=\"dependencies-filter\" min=\"0\" max=\"20\" value=\"20\" style=\"width: 100%; margin-bottom: 5px;\">\n                    <div style=\"font-size: 0.8em; color: #6c757d; text-align: center;\">\n                        <span id=\"dependencies-filter-value\">20</span> dependencies\n                    </div>\n                </div>\n                \n                <div style=\"margin-bottom: 15px;\">\n                    <label for=\"size-filter\" style=\"display: block; font-size: 0.9em; margin-bottom: 5px; color: #6c757d;\">\n                        \ud83d\udcc4 Max File Size (KB):\n                    </label>\n                    <input type=\"range\" id=\"size-filter\" min=\"0\" max=\"100\" value=\"100\" style=\"width: 100%; margin-bottom: 5px;\">\n                    <div style=\"font-size: 0.8em; color: #6c757d; text-align: center;\">\n                        <span id=\"size-filter-value\">100</span> KB\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"section\">\n                <h3>\ud83e\uddea Test Controls</h3>\n                <div class=\"folder-item\" id=\"test-toggle\" role=\"checkbox\" tabindex=\"0\">\n                    <span class=\"folder-checkbox\">\u2611</span>\n                    <span class=\"folder-label\">Show Test Dependencies</span>\n                </div>\n            </div>\n            \n            <div class=\"section\">\n                <h3>\ud83d\udd27 Controls</h3>\n                <button class=\"reset-button\" onclick=\"resetAllFilters()\">Reset All Filters</button>\n            </div>\n        </div>\n        \n        <div class=\"graph-container\">\n            <svg id=\"graph\"></svg>\n            <div id=\"tooltip\" class=\"tooltip\" aria-hidden=\"true\"></div>\n        </div>\n    </div>\n\n    <script>\n        // Enhanced graph data with complete directory inclusion\n        const graphData = {\n  \"nodes\": [\n    {\n      \"id\": \"root__app\",\n      \"name\": \"app\",\n      \"stem\": \"app\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"app.py\",\n      \"imports_count\": 3,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 23005,\n      \"index\": 0\n    },\n    {\n      \"id\": \"root__app_constants\",\n      \"name\": \"app_constants\",\n      \"stem\": \"app_constants\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"app_constants.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.7442894705540105,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 8612,\n      \"index\": 1\n    },\n    {\n      \"id\": \"root__app_factory\",\n      \"name\": \"app_factory\",\n      \"stem\": \"app_factory\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"app_factory.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.26749233841348097,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 576,\n      \"index\": 2\n    },\n    {\n      \"id\": \"root__borehole_log_professional\",\n      \"name\": \"borehole_log_professional\",\n      \"stem\": \"borehole_log_professional\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"borehole_log_professional.py\",\n      \"imports_count\": 2,\n      \"importance\": 0.4972969170040625,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 63204,\n      \"index\": 3\n    },\n    {\n      \"id\": \"root__callbacks_split\",\n      \"name\": \"callbacks_split\",\n      \"stem\": \"callbacks_split\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"callbacks_split.py\",\n      \"imports_count\": 11,\n      \"importance\": 0.26749233841348097,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 98589,\n      \"index\": 4\n    },\n    {\n      \"id\": \"root__comprehensive_optimization_validation\",\n      \"name\": \"comprehensive_optimization_validation\",\n      \"stem\": \"comprehensive_optimization_validation\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"comprehensive_optimization_validation.py\",\n      \"imports_count\": 4,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 24553,\n      \"index\": 5\n    },\n    {\n      \"id\": \"root__config\",\n      \"name\": \"config\",\n      \"stem\": \"config\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"config.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.42132286877637004,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 23646,\n      \"index\": 6\n    },\n    {\n      \"id\": \"root__coordinate_service\",\n      \"name\": \"coordinate_service\",\n      \"stem\": \"coordinate_service\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"coordinate_service.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.8463930548017131,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 13690,\n      \"index\": 7\n    },\n    {\n      \"id\": \"root__dataframe_optimizer\",\n      \"name\": \"dataframe_optimizer\",\n      \"stem\": \"dataframe_optimizer\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"dataframe_optimizer.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.273398013417415,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 10995,\n      \"index\": 8\n    },\n    {\n      \"id\": \"root__data_loader\",\n      \"name\": \"data_loader\",\n      \"stem\": \"data_loader\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"data_loader.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.3702264765027494,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1730,\n      \"index\": 9\n    },\n    {\n      \"id\": \"root__debug_module\",\n      \"name\": \"debug_module\",\n      \"stem\": \"debug_module\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"debug_module.py\",\n      \"imports_count\": 1,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1122,\n      \"index\": 10\n    },\n    {\n      \"id\": \"root__debug_offset_layout\",\n      \"name\": \"debug_offset_layout\",\n      \"stem\": \"debug_offset_layout\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"debug_offset_layout.py\",\n      \"imports_count\": 1,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1803,\n      \"index\": 11\n    },\n    {\n      \"id\": \"root__enhanced_error_handling\",\n      \"name\": \"enhanced_error_handling\",\n      \"stem\": \"enhanced_error_handling\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"enhanced_error_handling.py\",\n      \"imports_count\": 2,\n      \"importance\": 0.252728150903646,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 12371,\n      \"index\": 12\n    },\n    {\n      \"id\": \"root__error_handling\",\n      \"name\": \"error_handling\",\n      \"stem\": \"error_handling\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"error_handling.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.3921635984444459,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 13039,\n      \"index\": 13\n    },\n    {\n      \"id\": \"root__error_recovery\",\n      \"name\": \"error_recovery\",\n      \"stem\": \"error_recovery\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"error_recovery.py\",\n      \"imports_count\": 1,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 16853,\n      \"index\": 14\n    },\n    {\n      \"id\": \"root__final_validation\",\n      \"name\": \"final_validation\",\n      \"stem\": \"final_validation\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"final_validation.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 3910,\n      \"index\": 15\n    },\n    {\n      \"id\": \"root__geology_code_utils\",\n      \"name\": \"geology_code_utils\",\n      \"stem\": \"geology_code_utils\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"geology_code_utils.py\",\n      \"imports_count\": 0,\n      \"importance\": 1.0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1795,\n      \"index\": 16\n    },\n    {\n      \"id\": \"root__interactive_validation\",\n      \"name\": \"interactive_validation\",\n      \"stem\": \"interactive_validation\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"interactive_validation.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 22052,\n      \"index\": 17\n    },\n    {\n      \"id\": \"root__lazy_marker_manager\",\n      \"name\": \"lazy_marker_manager\",\n      \"stem\": \"lazy_marker_manager\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"lazy_marker_manager.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.3499134151871348,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 16437,\n      \"index\": 18\n    },\n    {\n      \"id\": \"root__loading_indicators\",\n      \"name\": \"loading_indicators\",\n      \"stem\": \"loading_indicators\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"loading_indicators.py\",\n      \"imports_count\": 1,\n      \"importance\": 0.22910545088791,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 14236,\n      \"index\": 19\n    },\n    {\n      \"id\": \"root__map_utils\",\n      \"name\": \"map_utils\",\n      \"stem\": \"map_utils\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"map_utils.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.25438912199850244,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 12405,\n      \"index\": 20\n    },\n    {\n      \"id\": \"root__memory_manager\",\n      \"name\": \"memory_manager\",\n      \"stem\": \"memory_manager\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"memory_manager.py\",\n      \"imports_count\": 2,\n      \"importance\": 0.273398013417415,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 14105,\n      \"index\": 21\n    },\n    {\n      \"id\": \"root__migration_validation\",\n      \"name\": \"migration_validation\",\n      \"stem\": \"migration_validation\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"migration_validation.py\",\n      \"imports_count\": 1,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 8451,\n      \"index\": 22\n    },\n    {\n      \"id\": \"root__options_exploration\",\n      \"name\": \"options_exploration\",\n      \"stem\": \"options_exploration\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"options_exploration.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 19788,\n      \"index\": 23\n    },\n    {\n      \"id\": \"root__polyline_utils\",\n      \"name\": \"polyline_utils\",\n      \"stem\": \"polyline_utils\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"polyline_utils.py\",\n      \"imports_count\": 1,\n      \"importance\": 0.25438912199850244,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 15171,\n      \"index\": 24\n    },\n    {\n      \"id\": \"root__section_plot_professional\",\n      \"name\": \"section_plot_professional\",\n      \"stem\": \"section_plot_professional\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"section_plot_professional.py\",\n      \"imports_count\": 1,\n      \"importance\": 0.4741682020954265,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 29723,\n      \"index\": 25\n    },\n    {\n      \"id\": \"root__test_force_directed_layout\",\n      \"name\": \"test_force_directed_layout\",\n      \"stem\": \"test_force_directed_layout\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"test_force_directed_layout.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": true,\n      \"is_init\": false,\n      \"size\": 7430,\n      \"index\": 26\n    },\n    {\n      \"id\": \"root__test_internal_imports\",\n      \"name\": \"test_internal_imports\",\n      \"stem\": \"test_internal_imports\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"test_internal_imports.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": true,\n      \"is_init\": false,\n      \"size\": 6669,\n      \"index\": 27\n    },\n    {\n      \"id\": \"root__validate_features\",\n      \"name\": \"validate_features\",\n      \"stem\": \"validate_features\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"validate_features.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 3453,\n      \"index\": 28\n    },\n    {\n      \"id\": \"root__workspace_audit\",\n      \"name\": \"workspace_audit\",\n      \"stem\": \"workspace_audit\",\n      \"folder\": \"root\",\n      \"color\": \"#E3F2FD\",\n      \"file_path\": \"workspace_audit.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 5834,\n      \"index\": 29\n    },\n    {\n      \"id\": \"callbacks__base\",\n      \"name\": \"base (callbacks)\",\n      \"stem\": \"base\",\n      \"folder\": \"callbacks\",\n      \"color\": \"#E8F5E8\",\n      \"file_path\": \"callbacks\\\\base.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.4216919734641159,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1528,\n      \"index\": 30\n    },\n    {\n      \"id\": \"callbacks__file_upload\",\n      \"name\": \"file_upload (callbacks)\",\n      \"stem\": \"file_upload\",\n      \"folder\": \"callbacks\",\n      \"color\": \"#E8F5E8\",\n      \"file_path\": \"callbacks\\\\file_upload.py\",\n      \"imports_count\": 6,\n      \"importance\": 0.237963963393811,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 17399,\n      \"index\": 31\n    },\n    {\n      \"id\": \"callbacks__map_interactions\",\n      \"name\": \"map_interactions (callbacks)\",\n      \"stem\": \"map_interactions\",\n      \"folder\": \"callbacks\",\n      \"color\": \"#E8F5E8\",\n      \"file_path\": \"callbacks\\\\map_interactions.py\",\n      \"imports_count\": 8,\n      \"importance\": 0.237963963393811,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 23327,\n      \"index\": 32\n    },\n    {\n      \"id\": \"callbacks__marker_handling\",\n      \"name\": \"marker_handling (callbacks)\",\n      \"stem\": \"marker_handling\",\n      \"folder\": \"callbacks\",\n      \"color\": \"#E8F5E8\",\n      \"file_path\": \"callbacks\\\\marker_handling.py\",\n      \"imports_count\": 4,\n      \"importance\": 0.237963963393811,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 12731,\n      \"index\": 33\n    },\n    {\n      \"id\": \"callbacks__plot_generation\",\n      \"name\": \"plot_generation (callbacks)\",\n      \"stem\": \"plot_generation\",\n      \"folder\": \"callbacks\",\n      \"color\": \"#E8F5E8\",\n      \"file_path\": \"callbacks\\\\plot_generation.py\",\n      \"imports_count\": 6,\n      \"importance\": 0.237963963393811,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 11066,\n      \"index\": 34\n    },\n    {\n      \"id\": \"callbacks__search_functionality\",\n      \"name\": \"search_functionality (callbacks)\",\n      \"stem\": \"search_functionality\",\n      \"folder\": \"callbacks\",\n      \"color\": \"#E8F5E8\",\n      \"file_path\": \"callbacks\\\\search_functionality.py\",\n      \"imports_count\": 5,\n      \"importance\": 0.237963963393811,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 12485,\n      \"index\": 35\n    },\n    {\n      \"id\": \"callbacks____init__\",\n      \"name\": \"__init__ (callbacks)\",\n      \"stem\": \"__init__\",\n      \"folder\": \"callbacks\",\n      \"color\": \"#E8F5E8\",\n      \"file_path\": \"callbacks\\\\__init__.py\",\n      \"imports_count\": 6,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": true,\n      \"size\": 4225,\n      \"index\": 36\n    },\n    {\n      \"id\": \"graph_output__enhanced_dependency_graph\",\n      \"name\": \"enhanced_dependency_graph (graph_output)\",\n      \"stem\": \"enhanced_dependency_graph\",\n      \"folder\": \"graph_output\",\n      \"color\": \"#FAFAFA\",\n      \"file_path\": \"graph_output\\\\enhanced_dependency_graph.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 67690,\n      \"index\": 37\n    },\n    {\n      \"id\": \"graph_output__enhanced_dependency_graph_backup - Copy\",\n      \"name\": \"enhanced_dependency_graph_backup - Copy (graph_output)\",\n      \"stem\": \"enhanced_dependency_graph_backup - Copy\",\n      \"folder\": \"graph_output\",\n      \"color\": \"#FAFAFA\",\n      \"file_path\": \"graph_output\\\\enhanced_dependency_graph_backup - Copy.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 56559,\n      \"index\": 38\n    },\n    {\n      \"id\": \"graph_output__html_dependency_graph\",\n      \"name\": \"html_dependency_graph (graph_output)\",\n      \"stem\": \"html_dependency_graph\",\n      \"folder\": \"graph_output\",\n      \"color\": \"#FAFAFA\",\n      \"file_path\": \"graph_output\\\\html_dependency_graph.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.38560583849216085,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 36597,\n      \"index\": 39\n    },\n    {\n      \"id\": \"state_management__app_state\",\n      \"name\": \"app_state (state_management)\",\n      \"stem\": \"app_state\",\n      \"folder\": \"state_management\",\n      \"color\": \"#F3E5F5\",\n      \"file_path\": \"state_management\\\\app_state.py\",\n      \"imports_count\": 1,\n      \"importance\": 0.29702071343315095,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 10646,\n      \"index\": 40\n    },\n    {\n      \"id\": \"state_management__state_models\",\n      \"name\": \"state_models (state_management)\",\n      \"stem\": \"state_models\",\n      \"folder\": \"state_management\",\n      \"color\": \"#F3E5F5\",\n      \"file_path\": \"state_management\\\\state_models.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.5494883198513292,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 5982,\n      \"index\": 41\n    },\n    {\n      \"id\": \"state_management____init__\",\n      \"name\": \"__init__ (state_management)\",\n      \"stem\": \"__init__\",\n      \"folder\": \"state_management\",\n      \"color\": \"#F3E5F5\",\n      \"file_path\": \"state_management\\\\__init__.py\",\n      \"imports_count\": 2,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": false,\n      \"is_init\": true,\n      \"size\": 513,\n      \"index\": 42\n    },\n    {\n      \"id\": \"tests__test_graph_data_integrity\",\n      \"name\": \"test_graph_data_integrity (tests)\",\n      \"stem\": \"test_graph_data_integrity\",\n      \"folder\": \"tests\",\n      \"color\": \"#FFF3E0\",\n      \"file_path\": \"tests\\\\test_graph_data_integrity.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": true,\n      \"is_init\": false,\n      \"size\": 21639,\n      \"index\": 43\n    },\n    {\n      \"id\": \"tests__test_html_data_extraction\",\n      \"name\": \"test_html_data_extraction (tests)\",\n      \"stem\": \"test_html_data_extraction\",\n      \"folder\": \"tests\",\n      \"color\": \"#FFF3E0\",\n      \"file_path\": \"tests\\\\test_html_data_extraction.py\",\n      \"imports_count\": 0,\n      \"importance\": 0.20843558837414103,\n      \"is_test\": true,\n      \"is_init\": false,\n      \"size\": 13810,\n      \"index\": 44\n    }\n  ],\n  \"edges\": [\n    {\n      \"source\": 0,\n      \"target\": 2,\n      \"source_name\": \"root__app\",\n      \"target_name\": \"root__app_factory\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 0,\n      \"target\": 6,\n      \"source_name\": \"root__app\",\n      \"target_name\": \"root__config\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 0,\n      \"target\": 4,\n      \"source_name\": \"root__app\",\n      \"target_name\": \"root__callbacks_split\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 3,\n      \"target\": 25,\n      \"source_name\": \"root__borehole_log_professional\",\n      \"target_name\": \"root__section_plot_professional\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 3,\n      \"target\": 16,\n      \"source_name\": \"root__borehole_log_professional\",\n      \"target_name\": \"root__geology_code_utils\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 7,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__coordinate_service\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 1,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__app_constants\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 3,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__borehole_log_professional\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 24,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__polyline_utils\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 19,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__loading_indicators\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 21,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__memory_manager\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 25,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__section_plot_professional\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 6,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__config\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 20,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__map_utils\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 8,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__dataframe_optimizer\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 4,\n      \"target\": 9,\n      \"source_name\": \"root__callbacks_split\",\n      \"target_name\": \"root__data_loader\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 5,\n      \"target\": 21,\n      \"source_name\": \"root__comprehensive_optimization_validation\",\n      \"target_name\": \"root__memory_manager\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 5,\n      \"target\": 12,\n      \"source_name\": \"root__comprehensive_optimization_validation\",\n      \"target_name\": \"root__enhanced_error_handling\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 5,\n      \"target\": 8,\n      \"source_name\": \"root__comprehensive_optimization_validation\",\n      \"target_name\": \"root__dataframe_optimizer\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 5,\n      \"target\": 7,\n      \"source_name\": \"root__comprehensive_optimization_validation\",\n      \"target_name\": \"root__coordinate_service\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 10,\n      \"target\": 16,\n      \"source_name\": \"root__debug_module\",\n      \"target_name\": \"root__geology_code_utils\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 11,\n      \"target\": 3,\n      \"source_name\": \"root__debug_offset_layout\",\n      \"target_name\": \"root__borehole_log_professional\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 12,\n      \"target\": 7,\n      \"source_name\": \"root__enhanced_error_handling\",\n      \"target_name\": \"root__coordinate_service\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 12,\n      \"target\": 9,\n      \"source_name\": \"root__enhanced_error_handling\",\n      \"target_name\": \"root__data_loader\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 14,\n      \"target\": 1,\n      \"source_name\": \"root__error_recovery\",\n      \"target_name\": \"root__app_constants\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 19,\n      \"target\": 1,\n      \"source_name\": \"root__loading_indicators\",\n      \"target_name\": \"root__app_constants\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 21,\n      \"target\": 7,\n      \"source_name\": \"root__memory_manager\",\n      \"target_name\": \"root__coordinate_service\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 21,\n      \"target\": 18,\n      \"source_name\": \"root__memory_manager\",\n      \"target_name\": \"root__lazy_marker_manager\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 22,\n      \"target\": 39,\n      \"source_name\": \"root__migration_validation\",\n      \"target_name\": \"graph_output__html_dependency_graph\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"graph_output\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 24,\n      \"target\": 7,\n      \"source_name\": \"root__polyline_utils\",\n      \"target_name\": \"root__coordinate_service\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 25,\n      \"target\": 16,\n      \"source_name\": \"root__section_plot_professional\",\n      \"target_name\": \"root__geology_code_utils\",\n      \"source_folder\": \"root\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 31,\n      \"target\": 7,\n      \"source_name\": \"callbacks__file_upload\",\n      \"target_name\": \"root__coordinate_service\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 31,\n      \"target\": 1,\n      \"source_name\": \"callbacks__file_upload\",\n      \"target_name\": \"root__app_constants\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 31,\n      \"target\": 30,\n      \"source_name\": \"callbacks__file_upload\",\n      \"target_name\": \"callbacks__base\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 31,\n      \"target\": 6,\n      \"source_name\": \"callbacks__file_upload\",\n      \"target_name\": \"root__config\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 31,\n      \"target\": 13,\n      \"source_name\": \"callbacks__file_upload\",\n      \"target_name\": \"root__error_handling\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 31,\n      \"target\": 9,\n      \"source_name\": \"callbacks__file_upload\",\n      \"target_name\": \"root__data_loader\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 32,\n      \"target\": 7,\n      \"source_name\": \"callbacks__map_interactions\",\n      \"target_name\": \"root__coordinate_service\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 32,\n      \"target\": 18,\n      \"source_name\": \"callbacks__map_interactions\",\n      \"target_name\": \"root__lazy_marker_manager\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 32,\n      \"target\": 24,\n      \"source_name\": \"callbacks__map_interactions\",\n      \"target_name\": \"root__polyline_utils\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 32,\n      \"target\": 1,\n      \"source_name\": \"callbacks__map_interactions\",\n      \"target_name\": \"root__app_constants\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 32,\n      \"target\": 30,\n      \"source_name\": \"callbacks__map_interactions\",\n      \"target_name\": \"callbacks__base\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 32,\n      \"target\": 6,\n      \"source_name\": \"callbacks__map_interactions\",\n      \"target_name\": \"root__config\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 32,\n      \"target\": 20,\n      \"source_name\": \"callbacks__map_interactions\",\n      \"target_name\": \"root__map_utils\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 32,\n      \"target\": 13,\n      \"source_name\": \"callbacks__map_interactions\",\n      \"target_name\": \"root__error_handling\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 33,\n      \"target\": 1,\n      \"source_name\": \"callbacks__marker_handling\",\n      \"target_name\": \"root__app_constants\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 33,\n      \"target\": 3,\n      \"source_name\": \"callbacks__marker_handling\",\n      \"target_name\": \"root__borehole_log_professional\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 33,\n      \"target\": 13,\n      \"source_name\": \"callbacks__marker_handling\",\n      \"target_name\": \"root__error_handling\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 33,\n      \"target\": 30,\n      \"source_name\": \"callbacks__marker_handling\",\n      \"target_name\": \"callbacks__base\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 34,\n      \"target\": 7,\n      \"source_name\": \"callbacks__plot_generation\",\n      \"target_name\": \"root__coordinate_service\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 34,\n      \"target\": 1,\n      \"source_name\": \"callbacks__plot_generation\",\n      \"target_name\": \"root__app_constants\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 34,\n      \"target\": 30,\n      \"source_name\": \"callbacks__plot_generation\",\n      \"target_name\": \"callbacks__base\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 34,\n      \"target\": 25,\n      \"source_name\": \"callbacks__plot_generation\",\n      \"target_name\": \"root__section_plot_professional\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 34,\n      \"target\": 6,\n      \"source_name\": \"callbacks__plot_generation\",\n      \"target_name\": \"root__config\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 34,\n      \"target\": 13,\n      \"source_name\": \"callbacks__plot_generation\",\n      \"target_name\": \"root__error_handling\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 35,\n      \"target\": 7,\n      \"source_name\": \"callbacks__search_functionality\",\n      \"target_name\": \"root__coordinate_service\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 35,\n      \"target\": 3,\n      \"source_name\": \"callbacks__search_functionality\",\n      \"target_name\": \"root__borehole_log_professional\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 35,\n      \"target\": 30,\n      \"source_name\": \"callbacks__search_functionality\",\n      \"target_name\": \"callbacks__base\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 35,\n      \"target\": 6,\n      \"source_name\": \"callbacks__search_functionality\",\n      \"target_name\": \"root__config\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 35,\n      \"target\": 13,\n      \"source_name\": \"callbacks__search_functionality\",\n      \"target_name\": \"root__error_handling\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"root\",\n      \"is_cross_folder\": true,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 36,\n      \"target\": 34,\n      \"source_name\": \"callbacks____init__\",\n      \"target_name\": \"callbacks__plot_generation\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 36,\n      \"target\": 33,\n      \"source_name\": \"callbacks____init__\",\n      \"target_name\": \"callbacks__marker_handling\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 36,\n      \"target\": 32,\n      \"source_name\": \"callbacks____init__\",\n      \"target_name\": \"callbacks__map_interactions\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 36,\n      \"target\": 30,\n      \"source_name\": \"callbacks____init__\",\n      \"target_name\": \"callbacks__base\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 36,\n      \"target\": 31,\n      \"source_name\": \"callbacks____init__\",\n      \"target_name\": \"callbacks__file_upload\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 36,\n      \"target\": 35,\n      \"source_name\": \"callbacks____init__\",\n      \"target_name\": \"callbacks__search_functionality\",\n      \"source_folder\": \"callbacks\",\n      \"target_folder\": \"callbacks\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 40,\n      \"target\": 41,\n      \"source_name\": \"state_management__app_state\",\n      \"target_name\": \"state_management__state_models\",\n      \"source_folder\": \"state_management\",\n      \"target_folder\": \"state_management\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 42,\n      \"target\": 40,\n      \"source_name\": \"state_management____init__\",\n      \"target_name\": \"state_management__app_state\",\n      \"source_folder\": \"state_management\",\n      \"target_folder\": \"state_management\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    },\n    {\n      \"source\": 42,\n      \"target\": 41,\n      \"source_name\": \"state_management____init__\",\n      \"target_name\": \"state_management__state_models\",\n      \"source_folder\": \"state_management\",\n      \"target_folder\": \"state_management\",\n      \"is_cross_folder\": false,\n      \"is_test_related\": false\n    }\n  ],\n  \"dependencies\": {\n    \"root__app\": {\n      \"file_path\": \"app.py\",\n      \"folder\": \"root\",\n      \"stem\": \"app\",\n      \"display_name\": \"app\",\n      \"imports\": [\n        \"root__app_factory\",\n        \"root__config\",\n        \"root__callbacks_split\"\n      ],\n      \"all_imports\": [\n        \"callbacks_split\",\n        \"sys\",\n        \"logging\",\n        \"datetime\",\n        \"app_factory\",\n        \"dash\",\n        \"dash_leaflet\",\n        \"config\",\n        \"webbrowser\"\n      ],\n      \"imports_count\": 9,\n      \"internal_imports_count\": 3,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 23005\n    },\n    \"root__app_constants\": {\n      \"file_path\": \"app_constants.py\",\n      \"folder\": \"root\",\n      \"stem\": \"app_constants\",\n      \"display_name\": \"app_constants\",\n      \"imports\": [],\n      \"all_imports\": [],\n      \"imports_count\": 0,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 8612\n    },\n    \"root__app_factory\": {\n      \"file_path\": \"app_factory.py\",\n      \"folder\": \"root\",\n      \"stem\": \"app_factory\",\n      \"display_name\": \"app_factory\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"dash\"\n      ],\n      \"imports_count\": 1,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 576\n    },\n    \"root__borehole_log_professional\": {\n      \"file_path\": \"borehole_log_professional.py\",\n      \"folder\": \"root\",\n      \"stem\": \"borehole_log_professional\",\n      \"display_name\": \"borehole_log_professional\",\n      \"imports\": [\n        \"root__section_plot_professional\",\n        \"root__geology_code_utils\"\n      ],\n      \"all_imports\": [\n        \"geology_code_utils\",\n        \"csv\",\n        \"pandas\",\n        \"matplotlib\",\n        \"matplotlib.patches\",\n        \"typing\",\n        \"contextlib\",\n        \"logging\",\n        \"base64\",\n        \"matplotlib.pyplot\",\n        \"io\",\n        \"numpy\",\n        \"section_plot_professional\",\n        \"textwrap\"\n      ],\n      \"imports_count\": 14,\n      \"internal_imports_count\": 2,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 63204\n    },\n    \"root__callbacks_split\": {\n      \"file_path\": \"callbacks_split.py\",\n      \"folder\": \"root\",\n      \"stem\": \"callbacks_split\",\n      \"display_name\": \"callbacks_split\",\n      \"imports\": [\n        \"root__coordinate_service\",\n        \"root__app_constants\",\n        \"root__borehole_log_professional\",\n        \"root__polyline_utils\",\n        \"root__loading_indicators\",\n        \"root__memory_manager\",\n        \"root__section_plot_professional\",\n        \"root__config\",\n        \"root__map_utils\",\n        \"root__dataframe_optimizer\",\n        \"root__data_loader\"\n      ],\n      \"all_imports\": [\n        \"app_constants\",\n        \"pandas\",\n        \"map_utils\",\n        \"datetime\",\n        \"matplotlib\",\n        \"dataframe_optimizer\",\n        \"logging\",\n        \"sklearn.decomposition\",\n        \"matplotlib.pyplot\",\n        \"loading_indicators\",\n        \"polyline_utils\",\n        \"traceback\",\n        \"coordinate_service\",\n        \"dash\",\n        \"io\",\n        \"config\",\n        \"data_loader\",\n        \"numpy\",\n        \"statistics\",\n        \"dash_leaflet\",\n        \"base64\",\n        \"memory_manager\",\n        \"borehole_log_professional\",\n        \"section_plot_professional\"\n      ],\n      \"imports_count\": 24,\n      \"internal_imports_count\": 11,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 98589\n    },\n    \"root__comprehensive_optimization_validation\": {\n      \"file_path\": \"comprehensive_optimization_validation.py\",\n      \"folder\": \"root\",\n      \"stem\": \"comprehensive_optimization_validation\",\n      \"display_name\": \"comprehensive_optimization_validation\",\n      \"imports\": [\n        \"root__memory_manager\",\n        \"root__enhanced_error_handling\",\n        \"root__dataframe_optimizer\",\n        \"root__coordinate_service\"\n      ],\n      \"all_imports\": [\n        \"coordinate_service\",\n        \"pandas\",\n        \"matplotlib\",\n        \"sys\",\n        \"dataframe_optimizer\",\n        \"logging\",\n        \"enhanced_error_handling\",\n        \"matplotlib.pyplot\",\n        \"io\",\n        \"numpy\",\n        \"memory_manager\",\n        \"traceback\",\n        \"time\"\n      ],\n      \"imports_count\": 13,\n      \"internal_imports_count\": 4,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 24553\n    },\n    \"root__config\": {\n      \"file_path\": \"config.py\",\n      \"folder\": \"root\",\n      \"stem\": \"config\",\n      \"display_name\": \"config\",\n      \"imports\": [],\n      \"all_imports\": [],\n      \"imports_count\": 0,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 23646\n    },\n    \"root__coordinate_service\": {\n      \"file_path\": \"coordinate_service.py\",\n      \"folder\": \"root\",\n      \"stem\": \"coordinate_service\",\n      \"display_name\": \"coordinate_service\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"pandas\",\n        \"typing\",\n        \"logging\",\n        \"numpy\",\n        \"functools\",\n        \"pyproj\"\n      ],\n      \"imports_count\": 6,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 13690\n    },\n    \"root__dataframe_optimizer\": {\n      \"file_path\": \"dataframe_optimizer.py\",\n      \"folder\": \"root\",\n      \"stem\": \"dataframe_optimizer\",\n      \"display_name\": \"dataframe_optimizer\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"numpy\",\n        \"typing\",\n        \"pandas\",\n        \"logging\"\n      ],\n      \"imports_count\": 4,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 10995\n    },\n    \"root__data_loader\": {\n      \"file_path\": \"data_loader.py\",\n      \"folder\": \"root\",\n      \"stem\": \"data_loader\",\n      \"display_name\": \"data_loader\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"os\",\n        \"csv\",\n        \"pandas\"\n      ],\n      \"imports_count\": 3,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1730\n    },\n    \"root__debug_module\": {\n      \"file_path\": \"debug_module.py\",\n      \"folder\": \"root\",\n      \"stem\": \"debug_module\",\n      \"display_name\": \"debug_module\",\n      \"imports\": [\n        \"root__geology_code_utils\"\n      ],\n      \"all_imports\": [\n        \"geology_code_utils\",\n        \"pandas\",\n        \"matplotlib.patches\",\n        \"typing\",\n        \"logging\",\n        \"matplotlib.pyplot\"\n      ],\n      \"imports_count\": 6,\n      \"internal_imports_count\": 1,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1122\n    },\n    \"root__debug_offset_layout\": {\n      \"file_path\": \"debug_offset_layout.py\",\n      \"folder\": \"root\",\n      \"stem\": \"debug_offset_layout\",\n      \"display_name\": \"debug_offset_layout\",\n      \"imports\": [\n        \"root__borehole_log_professional\"\n      ],\n      \"all_imports\": [\n        \"sys\",\n        \"traceback\",\n        \"borehole_log_professional\",\n        \"logging\"\n      ],\n      \"imports_count\": 4,\n      \"internal_imports_count\": 1,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1803\n    },\n    \"root__enhanced_error_handling\": {\n      \"file_path\": \"enhanced_error_handling.py\",\n      \"folder\": \"root\",\n      \"stem\": \"enhanced_error_handling\",\n      \"display_name\": \"enhanced_error_handling\",\n      \"imports\": [\n        \"root__coordinate_service\",\n        \"root__data_loader\"\n      ],\n      \"all_imports\": [\n        \"coordinate_service\",\n        \"enum\",\n        \"typing\",\n        \"logging\",\n        \"dataclasses\",\n        \"data_loader\",\n        \"functools\",\n        \"time\"\n      ],\n      \"imports_count\": 8,\n      \"internal_imports_count\": 2,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 12371\n    },\n    \"root__error_handling\": {\n      \"file_path\": \"error_handling.py\",\n      \"folder\": \"root\",\n      \"stem\": \"error_handling\",\n      \"display_name\": \"error_handling\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"enum\",\n        \"typing\",\n        \"logging\",\n        \"datetime\",\n        \"dataclasses\",\n        \"dash\",\n        \"traceback\"\n      ],\n      \"imports_count\": 7,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 13039\n    },\n    \"root__error_recovery\": {\n      \"file_path\": \"error_recovery.py\",\n      \"folder\": \"root\",\n      \"stem\": \"error_recovery\",\n      \"display_name\": \"error_recovery\",\n      \"imports\": [\n        \"root__app_constants\"\n      ],\n      \"all_imports\": [\n        \"app_constants\",\n        \"contextlib\",\n        \"typing\",\n        \"logging\",\n        \"functools\",\n        \"traceback\",\n        \"time\"\n      ],\n      \"imports_count\": 7,\n      \"internal_imports_count\": 1,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 16853\n    },\n    \"root__final_validation\": {\n      \"file_path\": \"final_validation.py\",\n      \"folder\": \"root\",\n      \"stem\": \"final_validation\",\n      \"display_name\": \"final_validation\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"json\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 2,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 3910\n    },\n    \"root__geology_code_utils\": {\n      \"file_path\": \"geology_code_utils.py\",\n      \"folder\": \"root\",\n      \"stem\": \"geology_code_utils\",\n      \"display_name\": \"geology_code_utils\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"os\",\n        \"csv\"\n      ],\n      \"imports_count\": 2,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1795\n    },\n    \"root__interactive_validation\": {\n      \"file_path\": \"interactive_validation.py\",\n      \"folder\": \"root\",\n      \"stem\": \"interactive_validation\",\n      \"display_name\": \"interactive_validation\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"json\",\n        \"re\",\n        \"datetime\"\n      ],\n      \"imports_count\": 3,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 22052\n    },\n    \"root__lazy_marker_manager\": {\n      \"file_path\": \"lazy_marker_manager.py\",\n      \"folder\": \"root\",\n      \"stem\": \"lazy_marker_manager\",\n      \"display_name\": \"lazy_marker_manager\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"pandas\",\n        \"typing\",\n        \"logging\",\n        \"dataclasses\",\n        \"dash_leaflet\"\n      ],\n      \"imports_count\": 5,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 16437\n    },\n    \"root__loading_indicators\": {\n      \"file_path\": \"loading_indicators.py\",\n      \"folder\": \"root\",\n      \"stem\": \"loading_indicators\",\n      \"display_name\": \"loading_indicators\",\n      \"imports\": [\n        \"root__app_constants\"\n      ],\n      \"all_imports\": [\n        \"typing\",\n        \"app_constants\",\n        \"dash\",\n        \"time\"\n      ],\n      \"imports_count\": 4,\n      \"internal_imports_count\": 1,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 14236\n    },\n    \"root__map_utils\": {\n      \"file_path\": \"map_utils.py\",\n      \"folder\": \"root\",\n      \"stem\": \"map_utils\",\n      \"display_name\": \"map_utils\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"pandas\",\n        \"shapely.ops\",\n        \"logging\",\n        \"pyproj\",\n        \"shapely.geometry\"\n      ],\n      \"imports_count\": 5,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 12405\n    },\n    \"root__memory_manager\": {\n      \"file_path\": \"memory_manager.py\",\n      \"folder\": \"root\",\n      \"stem\": \"memory_manager\",\n      \"display_name\": \"memory_manager\",\n      \"imports\": [\n        \"root__coordinate_service\",\n        \"root__lazy_marker_manager\"\n      ],\n      \"all_imports\": [\n        \"psutil\",\n        \"coordinate_service\",\n        \"pandas\",\n        \"sys\",\n        \"typing\",\n        \"gc\",\n        \"logging\",\n        \"datetime\",\n        \"dataclasses\",\n        \"lazy_marker_manager\"\n      ],\n      \"imports_count\": 10,\n      \"internal_imports_count\": 2,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 14105\n    },\n    \"root__migration_validation\": {\n      \"file_path\": \"migration_validation.py\",\n      \"folder\": \"root\",\n      \"stem\": \"migration_validation\",\n      \"display_name\": \"migration_validation\",\n      \"imports\": [\n        \"graph_output__html_dependency_graph\"\n      ],\n      \"all_imports\": [\n        \"os\",\n        \"html_dependency_graph\",\n        \"sys\",\n        \"json\",\n        \"time\"\n      ],\n      \"imports_count\": 5,\n      \"internal_imports_count\": 1,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 8451\n    },\n    \"root__options_exploration\": {\n      \"file_path\": \"options_exploration.py\",\n      \"folder\": \"root\",\n      \"stem\": \"options_exploration\",\n      \"display_name\": \"options_exploration\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"json\",\n        \"math\"\n      ],\n      \"imports_count\": 2,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 19788\n    },\n    \"root__polyline_utils\": {\n      \"file_path\": \"polyline_utils.py\",\n      \"folder\": \"root\",\n      \"stem\": \"polyline_utils\",\n      \"display_name\": \"polyline_utils\",\n      \"imports\": [\n        \"root__coordinate_service\"\n      ],\n      \"all_imports\": [\n        \"coordinate_service\",\n        \"pandas\",\n        \"shapely.ops\",\n        \"logging\",\n        \"dash_leaflet\",\n        \"pyproj\",\n        \"numpy\",\n        \"shapely.geometry\"\n      ],\n      \"imports_count\": 8,\n      \"internal_imports_count\": 1,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 15171\n    },\n    \"root__section_plot_professional\": {\n      \"file_path\": \"section_plot_professional.py\",\n      \"folder\": \"root\",\n      \"stem\": \"section_plot_professional\",\n      \"display_name\": \"section_plot_professional\",\n      \"imports\": [\n        \"root__geology_code_utils\"\n      ],\n      \"all_imports\": [\n        \"geology_code_utils\",\n        \"csv\",\n        \"pandas\",\n        \"matplotlib\",\n        \"matplotlib.patches\",\n        \"typing\",\n        \"contextlib\",\n        \"matplotlib.ticker\",\n        \"logging\",\n        \"base64\",\n        \"matplotlib.pyplot\",\n        \"io\",\n        \"numpy\",\n        \"shapely.geometry\",\n        \"re\",\n        \"pyproj\"\n      ],\n      \"imports_count\": 16,\n      \"internal_imports_count\": 1,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 29723\n    },\n    \"root__test_force_directed_layout\": {\n      \"file_path\": \"test_force_directed_layout.py\",\n      \"folder\": \"root\",\n      \"stem\": \"test_force_directed_layout\",\n      \"display_name\": \"test_force_directed_layout\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"os\",\n        \"re\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 3,\n      \"internal_imports_count\": 0,\n      \"is_test\": true,\n      \"is_init\": false,\n      \"size\": 7430\n    },\n    \"root__test_internal_imports\": {\n      \"file_path\": \"test_internal_imports.py\",\n      \"folder\": \"root\",\n      \"stem\": \"test_internal_imports\",\n      \"display_name\": \"test_internal_imports\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"typing\",\n        \"json\",\n        \"ast\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 4,\n      \"internal_imports_count\": 0,\n      \"is_test\": true,\n      \"is_init\": false,\n      \"size\": 6669\n    },\n    \"root__validate_features\": {\n      \"file_path\": \"validate_features.py\",\n      \"folder\": \"root\",\n      \"stem\": \"validate_features\",\n      \"display_name\": \"validate_features\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"os\",\n        \"json\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 3,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 3453\n    },\n    \"root__workspace_audit\": {\n      \"file_path\": \"workspace_audit.py\",\n      \"folder\": \"root\",\n      \"stem\": \"workspace_audit\",\n      \"display_name\": \"workspace_audit\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"typing\",\n        \"json\",\n        \"ast\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 4,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 5834\n    },\n    \"callbacks__base\": {\n      \"file_path\": \"callbacks\\\\base.py\",\n      \"folder\": \"callbacks\",\n      \"stem\": \"base\",\n      \"display_name\": \"base (callbacks)\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"abc\",\n        \"logging\"\n      ],\n      \"imports_count\": 2,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 1528\n    },\n    \"callbacks__file_upload\": {\n      \"file_path\": \"callbacks\\\\file_upload.py\",\n      \"folder\": \"callbacks\",\n      \"stem\": \"file_upload\",\n      \"display_name\": \"file_upload (callbacks)\",\n      \"imports\": [\n        \"root__coordinate_service\",\n        \"root__app_constants\",\n        \"callbacks__base\",\n        \"root__config\",\n        \"root__error_handling\",\n        \"root__data_loader\"\n      ],\n      \"all_imports\": [\n        \"app_constants\",\n        \"coordinate_service\",\n        \"statistics\",\n        \"pandas\",\n        \"typing\",\n        \"datetime\",\n        \"logging\",\n        \"base\",\n        \"state_management\",\n        \"base64\",\n        \"dash\",\n        \"data_loader\",\n        \"error_handling\",\n        \"dash_leaflet\",\n        \"config\"\n      ],\n      \"imports_count\": 15,\n      \"internal_imports_count\": 6,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 17399\n    },\n    \"callbacks__map_interactions\": {\n      \"file_path\": \"callbacks\\\\map_interactions.py\",\n      \"folder\": \"callbacks\",\n      \"stem\": \"map_interactions\",\n      \"display_name\": \"map_interactions (callbacks)\",\n      \"imports\": [\n        \"root__coordinate_service\",\n        \"root__lazy_marker_manager\",\n        \"root__polyline_utils\",\n        \"root__app_constants\",\n        \"callbacks__base\",\n        \"root__config\",\n        \"root__map_utils\",\n        \"root__error_handling\"\n      ],\n      \"all_imports\": [\n        \"app_constants\",\n        \"coordinate_service\",\n        \"pandas\",\n        \"map_utils\",\n        \"typing\",\n        \"datetime\",\n        \"logging\",\n        \"sklearn.decomposition\",\n        \"base\",\n        \"state_management\",\n        \"lazy_marker_manager\",\n        \"dash\",\n        \"dash_leaflet\",\n        \"error_handling\",\n        \"config\",\n        \"polyline_utils\"\n      ],\n      \"imports_count\": 16,\n      \"internal_imports_count\": 8,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 23327\n    },\n    \"callbacks__marker_handling\": {\n      \"file_path\": \"callbacks\\\\marker_handling.py\",\n      \"folder\": \"callbacks\",\n      \"stem\": \"marker_handling\",\n      \"display_name\": \"marker_handling (callbacks)\",\n      \"imports\": [\n        \"root__app_constants\",\n        \"root__borehole_log_professional\",\n        \"root__error_handling\",\n        \"callbacks__base\"\n      ],\n      \"all_imports\": [\n        \"app_constants\",\n        \"pandas\",\n        \"logging\",\n        \"base\",\n        \"state_management\",\n        \"dash_leaflet\",\n        \"dash\",\n        \"error_handling\",\n        \"borehole_log_professional\"\n      ],\n      \"imports_count\": 9,\n      \"internal_imports_count\": 4,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 12731\n    },\n    \"callbacks__plot_generation\": {\n      \"file_path\": \"callbacks\\\\plot_generation.py\",\n      \"folder\": \"callbacks\",\n      \"stem\": \"plot_generation\",\n      \"display_name\": \"plot_generation (callbacks)\",\n      \"imports\": [\n        \"root__coordinate_service\",\n        \"root__app_constants\",\n        \"callbacks__base\",\n        \"root__section_plot_professional\",\n        \"root__config\",\n        \"root__error_handling\"\n      ],\n      \"all_imports\": [\n        \"app_constants\",\n        \"coordinate_service\",\n        \"pandas\",\n        \"datetime\",\n        \"logging\",\n        \"base\",\n        \"state_management\",\n        \"dash\",\n        \"base64\",\n        \"io\",\n        \"matplotlib.pyplot\",\n        \"error_handling\",\n        \"config\",\n        \"section_plot_professional\",\n        \"shapely.geometry\"\n      ],\n      \"imports_count\": 15,\n      \"internal_imports_count\": 6,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 11066\n    },\n    \"callbacks__search_functionality\": {\n      \"file_path\": \"callbacks\\\\search_functionality.py\",\n      \"folder\": \"callbacks\",\n      \"stem\": \"search_functionality\",\n      \"display_name\": \"search_functionality (callbacks)\",\n      \"imports\": [\n        \"root__coordinate_service\",\n        \"root__borehole_log_professional\",\n        \"callbacks__base\",\n        \"root__config\",\n        \"root__error_handling\"\n      ],\n      \"all_imports\": [\n        \"coordinate_service\",\n        \"pandas\",\n        \"logging\",\n        \"base\",\n        \"state_management\",\n        \"dash\",\n        \"error_handling\",\n        \"config\",\n        \"borehole_log_professional\"\n      ],\n      \"imports_count\": 9,\n      \"internal_imports_count\": 5,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 12485\n    },\n    \"callbacks____init__\": {\n      \"file_path\": \"callbacks\\\\__init__.py\",\n      \"folder\": \"callbacks\",\n      \"stem\": \"__init__\",\n      \"display_name\": \"__init__ (callbacks)\",\n      \"imports\": [\n        \"callbacks__plot_generation\",\n        \"callbacks__marker_handling\",\n        \"callbacks__map_interactions\",\n        \"callbacks__base\",\n        \"callbacks__file_upload\",\n        \"callbacks__search_functionality\"\n      ],\n      \"all_imports\": [\n        \"file_upload\",\n        \"typing\",\n        \"plot_generation\",\n        \"search_functionality\",\n        \"logging\",\n        \"base\",\n        \"map_interactions\",\n        \"marker_handling\"\n      ],\n      \"imports_count\": 8,\n      \"internal_imports_count\": 6,\n      \"is_test\": false,\n      \"is_init\": true,\n      \"size\": 4225\n    },\n    \"graph_output__enhanced_dependency_graph\": {\n      \"file_path\": \"graph_output\\\\enhanced_dependency_graph.py\",\n      \"folder\": \"graph_output\",\n      \"stem\": \"enhanced_dependency_graph\",\n      \"display_name\": \"enhanced_dependency_graph (graph_output)\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"os\",\n        \"typing\",\n        \"ast\",\n        \"json\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 5,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 67690\n    },\n    \"graph_output__enhanced_dependency_graph_backup - Copy\": {\n      \"file_path\": \"graph_output\\\\enhanced_dependency_graph_backup - Copy.py\",\n      \"folder\": \"graph_output\",\n      \"stem\": \"enhanced_dependency_graph_backup - Copy\",\n      \"display_name\": \"enhanced_dependency_graph_backup - Copy (graph_output)\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"os\",\n        \"typing\",\n        \"ast\",\n        \"json\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 5,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 56559\n    },\n    \"graph_output__html_dependency_graph\": {\n      \"file_path\": \"graph_output\\\\html_dependency_graph.py\",\n      \"folder\": \"graph_output\",\n      \"stem\": \"html_dependency_graph\",\n      \"display_name\": \"html_dependency_graph (graph_output)\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"os\",\n        \"typing\",\n        \"ast\",\n        \"json\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 5,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 36597\n    },\n    \"state_management__app_state\": {\n      \"file_path\": \"state_management\\\\app_state.py\",\n      \"folder\": \"state_management\",\n      \"stem\": \"app_state\",\n      \"display_name\": \"app_state (state_management)\",\n      \"imports\": [\n        \"state_management__state_models\"\n      ],\n      \"all_imports\": [\n        \"state_models\",\n        \"pandas\",\n        \"typing\",\n        \"datetime\",\n        \"logging\",\n        \"threading\"\n      ],\n      \"imports_count\": 6,\n      \"internal_imports_count\": 1,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 10646\n    },\n    \"state_management__state_models\": {\n      \"file_path\": \"state_management\\\\state_models.py\",\n      \"folder\": \"state_management\",\n      \"stem\": \"state_models\",\n      \"display_name\": \"state_models (state_management)\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"typing\",\n        \"dataclasses\",\n        \"pandas\",\n        \"datetime\"\n      ],\n      \"imports_count\": 4,\n      \"internal_imports_count\": 0,\n      \"is_test\": false,\n      \"is_init\": false,\n      \"size\": 5982\n    },\n    \"state_management____init__\": {\n      \"file_path\": \"state_management\\\\__init__.py\",\n      \"folder\": \"state_management\",\n      \"stem\": \"__init__\",\n      \"display_name\": \"__init__ (state_management)\",\n      \"imports\": [\n        \"state_management__app_state\",\n        \"state_management__state_models\"\n      ],\n      \"all_imports\": [\n        \"app_state\",\n        \"state_models\"\n      ],\n      \"imports_count\": 2,\n      \"internal_imports_count\": 2,\n      \"is_test\": false,\n      \"is_init\": true,\n      \"size\": 513\n    },\n    \"tests__test_graph_data_integrity\": {\n      \"file_path\": \"tests\\\\test_graph_data_integrity.py\",\n      \"folder\": \"tests\",\n      \"stem\": \"test_graph_data_integrity\",\n      \"display_name\": \"test_graph_data_integrity (tests)\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"os\",\n        \"sys\",\n        \"typing\",\n        \"ast\",\n        \"traceback\",\n        \"json\",\n        \"html\",\n        \"graph_output.enhanced_dependency_graph\",\n        \"re\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 10,\n      \"internal_imports_count\": 0,\n      \"is_test\": true,\n      \"is_init\": false,\n      \"size\": 21639\n    },\n    \"tests__test_html_data_extraction\": {\n      \"file_path\": \"tests\\\\test_html_data_extraction.py\",\n      \"folder\": \"tests\",\n      \"stem\": \"test_html_data_extraction\",\n      \"display_name\": \"test_html_data_extraction (tests)\",\n      \"imports\": [],\n      \"all_imports\": [\n        \"typing\",\n        \"ast\",\n        \"json\",\n        \"html\",\n        \"re\",\n        \"pathlib\"\n      ],\n      \"imports_count\": 6,\n      \"internal_imports_count\": 0,\n      \"is_test\": true,\n      \"is_init\": false,\n      \"size\": 13810\n    }\n  },\n  \"subfolder_info\": {\n    \"root\": {\n      \"color\": \"#E3F2FD\",\n      \"modules\": [\n        \"app\",\n        \"app_constants\",\n        \"app_factory\",\n        \"borehole_log_professional\",\n        \"callbacks_split\",\n        \"comprehensive_optimization_validation\",\n        \"config\",\n        \"coordinate_service\",\n        \"dataframe_optimizer\",\n        \"data_loader\",\n        \"debug_module\",\n        \"debug_offset_layout\",\n        \"enhanced_error_handling\",\n        \"error_handling\",\n        \"error_recovery\",\n        \"final_validation\",\n        \"geology_code_utils\",\n        \"interactive_validation\",\n        \"lazy_marker_manager\",\n        \"loading_indicators\",\n        \"map_utils\",\n        \"memory_manager\",\n        \"migration_validation\",\n        \"options_exploration\",\n        \"polyline_utils\",\n        \"section_plot_professional\",\n        \"test_force_directed_layout\",\n        \"test_internal_imports\",\n        \"validate_features\",\n        \"workspace_audit\"\n      ],\n      \"test_modules\": [\n        \"test_force_directed_layout\",\n        \"test_internal_imports\"\n      ],\n      \"count\": 30\n    },\n    \"archive\": {\n      \"color\": \"#FFEBEE\",\n      \"modules\": [],\n      \"test_modules\": [],\n      \"count\": 0\n    },\n    \"callbacks\": {\n      \"color\": \"#E8F5E8\",\n      \"modules\": [\n        \"base (callbacks)\",\n        \"file_upload (callbacks)\",\n        \"map_interactions (callbacks)\",\n        \"marker_handling (callbacks)\",\n        \"plot_generation (callbacks)\",\n        \"search_functionality (callbacks)\",\n        \"__init__ (callbacks)\"\n      ],\n      \"test_modules\": [],\n      \"count\": 7\n    },\n    \"flowchart_visualization\": {\n      \"color\": \"#E0F2F1\",\n      \"modules\": [],\n      \"test_modules\": [],\n      \"count\": 0\n    },\n    \"graph_output\": {\n      \"color\": \"#FAFAFA\",\n      \"modules\": [\n        \"enhanced_dependency_graph (graph_output)\",\n        \"enhanced_dependency_graph_backup - Copy (graph_output)\",\n        \"html_dependency_graph (graph_output)\"\n      ],\n      \"test_modules\": [],\n      \"count\": 3\n    },\n    \"old_streamlit_files\": {\n      \"color\": \"#FFF8E1\",\n      \"modules\": [],\n      \"test_modules\": [],\n      \"count\": 0\n    },\n    \"state_management\": {\n      \"color\": \"#F3E5F5\",\n      \"modules\": [\n        \"app_state (state_management)\",\n        \"state_models (state_management)\",\n        \"__init__ (state_management)\"\n      ],\n      \"test_modules\": [],\n      \"count\": 3\n    },\n    \"tests\": {\n      \"color\": \"#FFF3E0\",\n      \"modules\": [\n        \"test_graph_data_integrity (tests)\",\n        \"test_html_data_extraction (tests)\"\n      ],\n      \"test_modules\": [\n        \"test_graph_data_integrity (tests)\",\n        \"test_html_data_extraction (tests)\"\n      ],\n      \"count\": 2\n    },\n    \"assets\": {\n      \"color\": \"#F1F8E9\",\n      \"modules\": [],\n      \"test_modules\": [],\n      \"count\": 0\n    },\n    \"reports\": {\n      \"color\": \"#FCE4EC\",\n      \"modules\": [],\n      \"test_modules\": [],\n      \"count\": 0\n    }\n  },\n  \"importance_scores\": {\n    \"root__app\": 0.20843558837414103,\n    \"root__app_constants\": 0.7442894705540105,\n    \"root__app_factory\": 0.26749233841348097,\n    \"root__borehole_log_professional\": 0.4972969170040625,\n    \"root__callbacks_split\": 0.26749233841348097,\n    \"root__comprehensive_optimization_validation\": 0.20843558837414103,\n    \"root__config\": 0.42132286877637004,\n    \"root__coordinate_service\": 0.8463930548017131,\n    \"root__dataframe_optimizer\": 0.273398013417415,\n    \"root__data_loader\": 0.3702264765027494,\n    \"root__debug_module\": 0.20843558837414103,\n    \"root__debug_offset_layout\": 0.20843558837414103,\n    \"root__enhanced_error_handling\": 0.252728150903646,\n    \"root__error_handling\": 0.3921635984444459,\n    \"root__error_recovery\": 0.20843558837414103,\n    \"root__final_validation\": 0.20843558837414103,\n    \"root__geology_code_utils\": 1.0,\n    \"root__interactive_validation\": 0.20843558837414103,\n    \"root__lazy_marker_manager\": 0.3499134151871348,\n    \"root__loading_indicators\": 0.22910545088791,\n    \"root__map_utils\": 0.25438912199850244,\n    \"root__memory_manager\": 0.273398013417415,\n    \"root__migration_validation\": 0.20843558837414103,\n    \"root__options_exploration\": 0.20843558837414103,\n    \"root__polyline_utils\": 0.25438912199850244,\n    \"root__section_plot_professional\": 0.4741682020954265,\n    \"root__test_force_directed_layout\": 0.20843558837414103,\n    \"root__test_internal_imports\": 0.20843558837414103,\n    \"root__validate_features\": 0.20843558837414103,\n    \"root__workspace_audit\": 0.20843558837414103,\n    \"callbacks__base\": 0.4216919734641159,\n    \"callbacks__file_upload\": 0.237963963393811,\n    \"callbacks__map_interactions\": 0.237963963393811,\n    \"callbacks__marker_handling\": 0.237963963393811,\n    \"callbacks__plot_generation\": 0.237963963393811,\n    \"callbacks__search_functionality\": 0.237963963393811,\n    \"callbacks____init__\": 0.20843558837414103,\n    \"graph_output__enhanced_dependency_graph\": 0.20843558837414103,\n    \"graph_output__enhanced_dependency_graph_backup - Copy\": 0.20843558837414103,\n    \"graph_output__html_dependency_graph\": 0.38560583849216085,\n    \"state_management__app_state\": 0.29702071343315095,\n    \"state_management__state_models\": 0.5494883198513292,\n    \"state_management____init__\": 0.20843558837414103,\n    \"tests__test_graph_data_integrity\": 0.20843558837414103,\n    \"tests__test_html_data_extraction\": 0.20843558837414103\n  },\n  \"statistics\": {\n    \"total_files\": 45,\n    \"total_dependencies\": 69,\n    \"cross_folder_dependencies\": 25,\n    \"test_files\": 4,\n    \"folders\": 10\n  }\n};\n        \n        // Enhanced state management\n        let checkedFolders = new Set(Object.keys(graphData.subfolder_info));\n        let showTestDependencies = true;\n        let selectedNode = null;\n        let highlightedNodes = new Set();\n        \n        // Layout state management\n        let currentLayout = \"hierarchical\"; // \"hierarchical\" or \"force\"\n        let simulation = null;\n        \n        // Advanced filter state\n        let maxImportsFilter = 20;\n        let maxDependenciesFilter = 20;\n        let maxSizeFilter = 100; // KB\n        \n        // D3.js setup with enhanced features\n        const svg = d3.select(\"#graph\");\n        const tooltip = d3.select(\"#tooltip\");\n        let width, height;\n        \n        function updateDimensions() {\n            const container = document.querySelector('.graph-container');\n            width = container.clientWidth;\n            height = container.clientHeight;\n            svg.attr(\"width\", width).attr(\"height\", height);\n        }\n        \n        // Enhanced layout calculation with dependency-aware positioning\n        function calculateEnhancedHierarchicalLayout() {\n            console.log(\"\ud83d\udd27 Enhanced layout calculation starting...\");\n            \n            // Calculate node dimensions with importance weighting\n            graphData.nodes.forEach(d => {\n                const importance = d.importance || 0;\n                const baseWidth = Math.max(120, d.stem.length * 8 + 20);\n                const baseHeight = d.folder !== \"root\" ? 40 : 30;\n                \n                // Scale size based on importance\n                const importanceScale = 1 + (importance * 0.5);\n                d.width = Math.round(baseWidth * importanceScale);\n                d.height = Math.round(baseHeight * importanceScale);\n            });\n            \n            // Build enhanced adjacency maps\n            const incomingEdges = new Map();\n            const outgoingEdges = new Map();\n            const importanceWeights = new Map();\n            \n            graphData.nodes.forEach(node => {\n                incomingEdges.set(node.index, []);\n                outgoingEdges.set(node.index, []);\n                importanceWeights.set(node.index, node.importance || 0);\n            });\n            \n            graphData.edges.forEach(edge => {\n                if (shouldShowEdge(edge)) {\n                    incomingEdges.get(edge.target).push(edge.source);\n                    outgoingEdges.get(edge.source).push(edge.target);\n                }\n            });\n            \n            // Enhanced layer assignment with importance consideration\n            const levels = [];\n            const nodeToLevel = new Map();\n            const visited = new Set();\n            const inDegree = new Map();\n            \n            // Calculate weighted in-degrees\n            graphData.nodes.forEach(node => {\n                const edges = incomingEdges.get(node.index);\n                let weightedDegree = 0;\n                \n                for (const sourceIdx of edges) {\n                    const sourceImportance = importanceWeights.get(sourceIdx) || 0;\n                    weightedDegree += 1 + sourceImportance;\n                }\n                \n                inDegree.set(node.index, weightedDegree);\n            });\n            \n            // Process nodes level by level\n            let currentLevel = 0;\n            while (visited.size < graphData.nodes.length) {\n                levels[currentLevel] = [];\n                \n                // Find nodes for current level\n                const candidateNodes = [];\n                for (const node of graphData.nodes) {\n                    if (!visited.has(node.index) && inDegree.get(node.index) === 0) {\n                        candidateNodes.push(node);\n                    }\n                }\n                \n                // If no zero in-degree nodes, pick highest importance unvisited nodes\n                if (candidateNodes.length === 0) {\n                    const remainingNodes = graphData.nodes.filter(n => !visited.has(n.index));\n                    if (remainingNodes.length > 0) {\n                        // Sort by importance descending, then by in-degree ascending\n                        remainingNodes.sort((a, b) => {\n                            const importanceDiff = (b.importance || 0) - (a.importance || 0);\n                            if (Math.abs(importanceDiff) > 0.01) return importanceDiff;\n                            return inDegree.get(a.index) - inDegree.get(b.index);\n                        });\n                        \n                        candidateNodes.push(remainingNodes[0]);\n                    }\n                }\n                \n                // Sort candidates by importance within level\n                candidateNodes.sort((a, b) => (b.importance || 0) - (a.importance || 0));\n                \n                for (const node of candidateNodes) {\n                    levels[currentLevel].push(node.index);\n                    nodeToLevel.set(node.index, currentLevel);\n                    visited.add(node.index);\n                    \n                    // Update in-degrees\n                    for (const targetIdx of outgoingEdges.get(node.index)) {\n                        if (!visited.has(targetIdx)) {\n                            const currentDegree = inDegree.get(targetIdx);\n                            const nodeImportance = node.importance || 0;\n                            inDegree.set(targetIdx, Math.max(0, currentDegree - (1 + nodeImportance)));\n                        }\n                    }\n                }\n                \n                currentLevel++;\n                if (currentLevel > graphData.nodes.length) break; // Safety\n            }\n            \n            console.log(`\u2705 Created ${levels.length} levels with enhanced positioning`);\n            \n            // Enhanced position assignment\n            const margin = 60;\n            const levelWidth = Math.max(300, (width - 2 * margin) / Math.max(1, levels.length));\n            const nodeSpacing = 45;\n            \n            levels.forEach((level, levelIndex) => {\n                const x = margin + levelIndex * levelWidth;\n                \n                // Sort nodes in level by importance (highest first)\n                const sortedLevelNodes = level\n                    .map(nodeIdx => graphData.nodes[nodeIdx])\n                    .sort((a, b) => (b.importance || 0) - (a.importance || 0));\n                \n                const totalHeight = sortedLevelNodes.length * nodeSpacing;\n                const startY = Math.max(margin, (height - totalHeight) / 2);\n                \n                sortedLevelNodes.forEach((node, positionIndex) => {\n                    node.x = x;\n                    node.y = startY + positionIndex * nodeSpacing;\n                });\n            });\n            \n            return { levels, nodeToLevel };\n        }\n        \n        // Force-directed layout using D3 force simulation\n        function initializeForceDirectedLayout() {\n            console.log(\"\ud83c\udf10 Initializing force-directed layout...\");\n            \n            // Calculate node dimensions for force layout\n            graphData.nodes.forEach(d => {\n                const importance = d.importance || 0;\n                const baseWidth = Math.max(120, d.stem.length * 8 + 20);\n                const baseHeight = d.folder !== \"root\" ? 40 : 30;\n                \n                // Scale size based on importance\n                const importanceScale = 1 + (importance * 0.5);\n                d.width = Math.round(baseWidth * importanceScale);\n                d.height = Math.round(baseHeight * importanceScale);\n                \n                // Set initial positions if not set\n                if (d.x === undefined) d.x = width / 2 + (Math.random() - 0.5) * 200;\n                if (d.y === undefined) d.y = height / 2 + (Math.random() - 0.5) * 200;\n            });\n            \n            // Create filtered links for simulation\n            const validLinks = graphData.edges\n                .filter(edge => shouldShowEdge(edge))\n                .map(edge => ({\n                    source: edge.source,\n                    target: edge.target,\n                    strength: 0.5 + (graphData.nodes[edge.source]?.importance || 0) * 0.3\n                }));\n            \n            // Stop any existing simulation\n            if (simulation) {\n                simulation.stop();\n            }\n            \n            // Create force simulation\n            simulation = d3.forceSimulation(graphData.nodes)\n                .force(\"link\", d3.forceLink(validLinks)\n                    .id(d => d.index)\n                    .distance(d => {\n                        const sourceNode = graphData.nodes[d.source.index || d.source];\n                        const targetNode = graphData.nodes[d.target.index || d.target];\n                        const baseDistance = 150;\n                        const importanceBonus = ((sourceNode?.importance || 0) + (targetNode?.importance || 0)) * 50;\n                        return baseDistance + importanceBonus;\n                    })\n                    .strength(d => d.strength || 0.5)\n                )\n                .force(\"charge\", d3.forceManyBody()\n                    .strength(d => {\n                        const importance = d.importance || 0;\n                        const baseCharge = -800;\n                        const importanceMultiplier = 1 + importance * 2;\n                        return baseCharge * importanceMultiplier;\n                    })\n                )\n                .force(\"center\", d3.forceCenter(width / 2, height / 2))\n                .force(\"collision\", d3.forceCollide()\n                    .radius(d => Math.max(d.width, d.height) / 2 + 10)\n                    .strength(0.7)\n                )\n                .force(\"x\", d3.forceX(width / 2).strength(0.1))\n                .force(\"y\", d3.forceY(height / 2).strength(0.1));\n            \n            // Update positions during simulation\n            simulation.on(\"tick\", () => {\n                updatePositionsForceLayout();\n            });\n            \n            // Reduce alpha target for smoother convergence\n            simulation.alphaTarget(0.1).restart();\n            \n            console.log(\"\u2705 Force-directed layout initialized\");\n            return simulation;\n        }\n        \n        // Update positions for force layout\n        function updatePositionsForceLayout() {\n            if (!window.graphElements) return;\n            \n            const { node, link } = window.graphElements;\n            \n            // Update node positions\n            node.attr(\"transform\", d => `translate(${d.x},${d.y})`);\n            \n            // Update link paths with force layout positions\n            link.attr(\"d\", d => {\n                const source = d.source.x !== undefined ? d.source : graphData.nodes[d.source];\n                const target = d.target.x !== undefined ? d.target : graphData.nodes[d.target];\n                \n                if (!source || !target) return \"\";\n                \n                return createEnhancedCubicBezierPath({\n                    source: source.index,\n                    target: target.index\n                });\n            });\n        }\n        \n        // Enhanced cubic B\u00e9zier curve generation\n        function createEnhancedCubicBezierPath(d) {\n            const source = graphData.nodes[d.source];\n            const target = graphData.nodes[d.target];\n            \n            const sourceX = source.x + source.width/2;\n            const sourceY = source.y;\n            const targetX = target.x - target.width/2;\n            const targetY = target.y;\n            \n            const dx = targetX - sourceX;\n            const dy = targetY - sourceY;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            \n            // Adaptive control point calculation\n            const curveFactor = Math.min(0.6, Math.max(0.2, distance / 400));\n            const offsetFactor = Math.abs(dy) / 100;\n            \n            // Control points for smooth cubic B\u00e9zier\n            const cp1x = sourceX + dx * 0.3 + offsetFactor * 20;\n            const cp1y = sourceY + dy * 0.1;\n            const cp2x = targetX - dx * 0.3 - offsetFactor * 20;\n            const cp2y = targetY - dy * 0.1;\n            \n            return `M${sourceX},${sourceY} C${cp1x},${cp1y} ${cp2x},${cp2y} ${targetX},${targetY}`;\n        }\n        \n        // Switch between hierarchical and force-directed layouts\n        function switchLayout(newLayout) {\n            if (newLayout === currentLayout) return;\n            \n            console.log(`\ud83d\udd04 Switching from ${currentLayout} to ${newLayout} layout`);\n            currentLayout = newLayout;\n            \n            // Update toggle UI\n            const toggleSwitch = document.getElementById('toggle-switch');\n            const layoutIndicator = document.getElementById('layout-indicator');\n            \n            if (newLayout === \"force\") {\n                toggleSwitch.classList.add('active');\n                layoutIndicator.textContent = \"Current: Force-Directed Layout\";\n                \n                // Initialize force-directed layout\n                initializeForceDirectedLayout();\n                \n            } else {\n                toggleSwitch.classList.remove('active');\n                layoutIndicator.textContent = \"Current: Hierarchical Layout\";\n                \n                // Stop force simulation\n                if (simulation) {\n                    simulation.stop();\n                    simulation = null;\n                }\n                \n                // Recalculate hierarchical layout\n                const layout = calculateEnhancedHierarchicalLayout();\n                \n                // Animate to hierarchical positions\n                animateToHierarchicalLayout();\n            }\n        }\n        \n        // Animate nodes to hierarchical positions\n        function animateToHierarchicalLayout() {\n            if (!window.graphElements) return;\n            \n            const { node, link } = window.graphElements;\n            \n            // Animate nodes to hierarchical positions\n            node.transition()\n                .duration(1000)\n                .ease(d3.easeQuadInOut)\n                .attr(\"transform\", d => `translate(${d.x},${d.y})`);\n            \n            // Animate links to hierarchical curves\n            link.transition()\n                .duration(1000)\n                .ease(d3.easeQuadInOut)\n                .attr(\"d\", d => createEnhancedCubicBezierPath(d));\n        }\n        \n        // Setup layout toggle functionality\n        function setupLayoutToggle() {\n            const toggleSwitch = document.getElementById('toggle-switch');\n            const layoutToggle = document.getElementById('layout-toggle');\n            \n            function handleToggle() {\n                const newLayout = currentLayout === \"hierarchical\" ? \"force\" : \"hierarchical\";\n                switchLayout(newLayout);\n            }\n            \n            toggleSwitch.addEventListener('click', handleToggle);\n            layoutToggle.addEventListener('click', function(event) {\n                if (event.target === toggleSwitch || event.target.closest('.toggle-switch')) {\n                    return; // Let the toggle switch handle it\n                }\n                handleToggle();\n            });\n            \n            // Keyboard accessibility\n            toggleSwitch.addEventListener('keydown', function(event) {\n                if (event.key === 'Enter' || event.key === ' ') {\n                    event.preventDefault();\n                    handleToggle();\n                }\n            });\n            \n            toggleSwitch.setAttribute('tabindex', '0');\n            toggleSwitch.setAttribute('role', 'switch');\n            toggleSwitch.setAttribute('aria-checked', 'false');\n        }\n        \n        // Enhanced visibility logic\n        function shouldShowEdge(edge) {\n        function shouldShowEdge(edge) {\n            // Get source and target nodes\n            const sourceNode = graphData.nodes.find(n => n.id === edge.source_name);\n            const targetNode = graphData.nodes.find(n => n.id === edge.target_name);\n            \n            // Both nodes must be visible\n            if (!sourceNode || !targetNode) return false;\n            if (!shouldShowNode(sourceNode) || !shouldShowNode(targetNode)) return false;\n            \n            // Check test dependencies filter\n            if (!showTestDependencies && edge.is_test_related) {\n                return false;\n            }\n            \n            return true;\n        }\n        \n        // Initialize enhanced visualization\n        function initializeEnhancedVisualization() {\n            updateDimensions();\n            svg.selectAll(\"*\").remove();\n            \n            const g = svg.append(\"g\").attr(\"id\", \"main-group\");\n            \n            // Enhanced zoom with better constraints\n            const zoom = d3.zoom()\n                .scaleExtent([0.1, 8])\n                .on(\"zoom\", (event) => {\n                    g.attr(\"transform\", event.transform);\n                });\n            \n            svg.call(zoom);\n            \n            // Calculate enhanced layout\n            const layout = calculateEnhancedHierarchicalLayout();\n            \n            // Create enhanced arrow markers\n            createEnhancedArrowMarkers();\n            \n            // Create enhanced links with cubic B\u00e9zier curves\n            const linkGroup = g.append(\"g\").attr(\"class\", \"links\");\n            const link = linkGroup.selectAll(\"path\")\n                .data(graphData.edges)\n                .enter().append(\"path\")\n                .attr(\"class\", d => {\n                    let classes = \"link\";\n                    if (d.is_test_related) classes += \" test-related\";\n                    return classes;\n                })\n                .attr(\"d\", d => createEnhancedCubicBezierPath(d))\n                .attr(\"marker-end\", \"url(#arrowhead)\");\n            \n            // Create enhanced node groups\n            const nodeGroup = g.append(\"g\").attr(\"class\", \"nodes\");\n            const node = nodeGroup.selectAll(\"g\")\n                .data(graphData.nodes)\n                .enter().append(\"g\")\n                .attr(\"class\", \"node\")\n                .attr(\"transform\", d => `translate(${d.x},${d.y})`)\n                .call(d3.drag()\n                    .on(\"start\", dragstarted)\n                    .on(\"drag\", dragged)\n                    .on(\"end\", dragended));\n            \n            // Enhanced rectangles with importance indicators\n            const rect = node.append(\"rect\")\n                .attr(\"class\", \"node-rect\")\n                .attr(\"width\", d => d.width)\n                .attr(\"height\", d => d.height)\n                .attr(\"x\", d => -d.width/2)\n                .attr(\"y\", d => -d.height/2)\n                .attr(\"fill\", d => d.color);\n            \n            // Importance indicators\n            node.filter(d => d.importance > 0.3)\n                .append(\"circle\")\n                .attr(\"class\", d => {\n                    if (d.importance > 0.7) return \"importance-indicator high\";\n                    if (d.importance > 0.5) return \"importance-indicator medium\";\n                    return \"importance-indicator low\";\n                })\n                .attr(\"cx\", d => d.width/2 - 8)\n                .attr(\"cy\", d => -d.height/2 + 8)\n                .attr(\"r\", 6);\n            \n            // Enhanced text labels\n            node.append(\"text\")\n                .attr(\"class\", \"node-label\")\n                .text(d => d.stem)\n                .attr(\"dy\", \"-2px\");\n            \n            node.filter(d => d.folder !== \"root\")\n                .append(\"text\")\n                .attr(\"class\", \"folder-label-text\")\n                .text(d => `(${d.folder})`)\n                .attr(\"dy\", \"10px\");\n            \n            // Enhanced event listeners\n            node.on(\"click\", handleEnhancedNodeClick)\n                .on(\"mouseover\", handleEnhancedMouseOver)\n                .on(\"mouseout\", handleEnhancedMouseOut);\n            \n            svg.on(\"click\", function(event) {\n                if (event.target === this) {\n                    resetHighlighting();\n                }\n            });\n            \n            window.graphElements = { node, link, g };\n            \n            setupLayoutToggle();\n            setupAdvancedFilters();\n            updateEnhancedControls();\n            updateEnhancedStats();\n            updateEnhancedVisibility();\n        }\n        \n        // Enhanced arrow markers\n        function createEnhancedArrowMarkers() {\n            const defs = svg.select(\"defs\").empty() ? svg.append(\"defs\") : svg.select(\"defs\");\n            \n            // Standard arrow\n            defs.append(\"marker\")\n                .attr(\"id\", \"arrowhead\")\n                .attr(\"viewBox\", \"0 -5 10 10\")\n                .attr(\"refX\", 8)\n                .attr(\"refY\", 0)\n                .attr(\"markerWidth\", 8)\n                .attr(\"markerHeight\", 8)\n                .attr(\"orient\", \"auto\")\n                .append(\"path\")\n                .attr(\"d\", \"M0,-5L10,0L0,5\")\n                .attr(\"fill\", \"#666\");\n            \n            // Highlighted arrow\n            defs.append(\"marker\")\n                .attr(\"id\", \"arrowhead-highlighted\")\n                .attr(\"viewBox\", \"0 -5 10 10\")\n                .attr(\"refX\", 8)\n                .attr(\"refY\", 0)\n                .attr(\"markerWidth\", 8)\n                .attr(\"markerHeight\", 8)\n                .attr(\"orient\", \"auto\")\n                .append(\"path\")\n                .attr(\"d\", \"M0,-5L10,0L0,5\")\n                .attr(\"fill\", \"#ff6600\");\n            \n            // Dimmed arrow\n            defs.append(\"marker\")\n                .attr(\"id\", \"arrowhead-dimmed\")\n                .attr(\"viewBox\", \"0 -5 10 10\")\n                .attr(\"refX\", 8)\n                .attr(\"refY\", 0)\n                .attr(\"markerWidth\", 8)\n                .attr(\"markerHeight\", 8)\n                .attr(\"orient\", \"auto\")\n                .append(\"path\")\n                .attr(\"d\", \"M0,-5L10,0L0,5\")\n                .attr(\"fill\", \"#ccc\");\n        }\n        \n        // Enhanced event handlers\n        function handleEnhancedNodeClick(event, d) {\n            event.stopPropagation();\n            highlightEnhancedDirectPath(d);\n        }\n        \n        function handleEnhancedMouseOver(event, d) {\n            const depInfo = graphData.dependencies[d.id];\n            const imports = depInfo.imports || [];\n            const importNames = imports.map(id => {\n                const dep = graphData.dependencies[id];\n                return dep ? dep.stem : id;\n            }).join(\", \");\n            \n            const importanceLevel = d.importance > 0.7 ? \"High\" : \n                                  d.importance > 0.5 ? \"Medium\" : \n                                  d.importance > 0.3 ? \"Low\" : \"Minimal\";\n            \n            tooltip.style(\"opacity\", 1)\n                .attr(\"aria-hidden\", \"false\")\n                .html(`\n                    <strong>${d.stem}</strong><br/>\n                    <strong>Folder:</strong> ${d.folder}<br/>\n                    <strong>Importance:</strong> ${importanceLevel} (${(d.importance * 100).toFixed(1)}%)<br/>\n                    <strong>Dependencies:</strong> ${imports.length}<br/>\n                    <strong>File Size:</strong> ${(d.size / 1024).toFixed(1)}KB<br/>\n                    ${d.is_test ? \"<strong>Type:</strong> Test File<br/>\" : \"\"}\n                    <strong>Imports:</strong> ${importNames || \"None\"}\n                `)\n                .style(\"left\", (event.pageX + 10) + \"px\")\n                .style(\"top\", (event.pageY - 10) + \"px\");\n        }\n        \n        function handleEnhancedMouseOut() {\n            tooltip.style(\"opacity\", 0).attr(\"aria-hidden\", \"true\");\n        }\n        \n        // Enhanced highlighting\n        function highlightEnhancedDirectPath(clickedNode) {\n            selectedNode = clickedNode;\n            const connected = findEnhancedConnections(clickedNode.id);\n            \n            // Reset all elements\n            window.graphElements.node.classed(\"dimmed highlighted\", false);\n            window.graphElements.node.selectAll(\".node-rect\").classed(\"dimmed highlighted\", false);\n            window.graphElements.link\n                .classed(\"dimmed highlighted\", false)\n                .attr(\"marker-end\", \"url(#arrowhead)\");\n            \n            // Apply highlighting\n            window.graphElements.node\n                .classed(\"highlighted\", d => connected.has(d.id))\n                .classed(\"dimmed\", d => !connected.has(d.id));\n            \n            window.graphElements.node.selectAll(\".node-rect\")\n                .classed(\"highlighted\", function() {\n                    const nodeData = d3.select(this.parentNode).datum();\n                    return connected.has(nodeData.id);\n                })\n                .classed(\"dimmed\", function() {\n                    const nodeData = d3.select(this.parentNode).datum();\n                    return !connected.has(nodeData.id);\n                });\n            \n            window.graphElements.link\n                .classed(\"highlighted\", d => connected.has(d.source_name) && connected.has(d.target_name))\n                .classed(\"dimmed\", d => !(connected.has(d.source_name) && connected.has(d.target_name)))\n                .attr(\"marker-end\", d => {\n                    if (connected.has(d.source_name) && connected.has(d.target_name)) {\n                        return \"url(#arrowhead-highlighted)\";\n                    } else if (!(connected.has(d.source_name) && connected.has(d.target_name))) {\n                        return \"url(#arrowhead-dimmed)\";\n                    } else {\n                        return \"url(#arrowhead)\";\n                    }\n                });\n            \n            highlightedNodes = connected;\n        }\n        \n        function findEnhancedConnections(nodeId) {\n            const connected = new Set([nodeId]);\n            \n            // Find all connections respecting current filters\n            graphData.edges.forEach(edge => {\n                if (!shouldShowEdge(edge)) return;\n                \n                if (edge.source_name === nodeId) {\n                    connected.add(edge.target_name);\n                }\n                if (edge.target_name === nodeId) {\n                    connected.add(edge.source_name);\n                }\n            });\n            \n            return connected;\n        }\n        \n        function resetHighlighting() {\n            selectedNode = null;\n            highlightedNodes.clear();\n            window.graphElements.node.classed(\"dimmed highlighted\", false);\n            window.graphElements.node.selectAll(\".node-rect\").classed(\"dimmed highlighted\", false);\n            window.graphElements.link\n                .classed(\"dimmed highlighted\", false)\n                .attr(\"marker-end\", \"url(#arrowhead)\");\n        }\n        \n        // Enhanced controls\n        function updateEnhancedControls() {\n            const container = d3.select(\"#folder-controls\");\n            container.selectAll(\"*\").remove();\n            \n            Object.entries(graphData.subfolder_info).forEach(([folder, info]) => {\n                const item = container.append(\"div\")\n                    .attr(\"class\", \"folder-item\")\n                    .attr(\"role\", \"checkbox\")\n                    .attr(\"aria-checked\", checkedFolders.has(folder))\n                    .attr(\"tabindex\", \"0\")\n                    .on(\"click\", () => toggleFolder(folder))\n                    .on(\"keydown\", function(event) {\n                        if (event.key === \"Enter\" || event.key === \" \") {\n                            event.preventDefault();\n                            toggleFolder(folder);\n                        }\n                    });\n                \n                item.append(\"span\")\n                    .attr(\"class\", \"folder-checkbox\")\n                    .text(checkedFolders.has(folder) ? \"\u2611\" : \"\u2610\");\n                \n                item.append(\"div\")\n                    .attr(\"class\", \"folder-color\")\n                    .style(\"background-color\", info.color);\n                \n                const labelText = `${folder} <span class=\"folder-count\">(${info.count} modules)</span>`;\n                const testText = info.test_modules && info.test_modules.length > 0 ? \n                    ` <span class=\"test-count\">[${info.test_modules.length} tests]</span>` : \"\";\n                \n                item.append(\"span\")\n                    .attr(\"class\", \"folder-label\")\n                    .html(labelText + testText);\n            });\n            \n            // Test toggle\n            const testToggle = d3.select(\"#test-toggle\");\n            testToggle.select(\".folder-checkbox\")\n                .text(showTestDependencies ? \"\u2611\" : \"\u2610\");\n            \n            testToggle.on(\"click\", toggleTestDependencies);\n            \n            // Update \"Select All\" toggle\n            const allFolders = Object.keys(graphData.subfolder_info);\n            const allSelected = allFolders.every(folder => checkedFolders.has(folder));\n            const selectAllToggle = d3.select(\"#select-all-toggle\");\n            selectAllToggle.select(\".folder-checkbox\")\n                .text(allSelected ? \"\u2611\" : \"\u2610\");\n        }\n        \n        function updateEnhancedStats() {\n            const visibleNodes = graphData.nodes.filter(n => shouldShowNode(n));\n            const visibleEdges = graphData.edges.filter(e => shouldShowEdge(e));\n            const testFiles = visibleNodes.filter(n => n.is_test).length;\n            const crossFolderEdges = visibleEdges.filter(e => e.is_cross_folder).length;\n            \n            const stats = [\n                { value: graphData.nodes.length, label: \"Total Files\" },\n                { value: visibleNodes.length, label: \"Visible Files\" },\n                { value: graphData.edges.length, label: \"Dependencies\" },\n                { value: visibleEdges.length, label: \"Visible Deps\" },\n                { value: Object.keys(graphData.subfolder_info).length, label: \"Directories\" },\n                { value: testFiles, label: \"Test Files\" }\n            ];\n            \n            const container = d3.select(\"#stats-content\");\n            container.selectAll(\"*\").remove();\n            \n            stats.forEach(stat => {\n                const item = container.append(\"div\").attr(\"class\", \"stat-item\");\n                item.append(\"div\").attr(\"class\", \"stat-value\").text(stat.value);\n                item.append(\"div\").attr(\"class\", \"stat-label\").text(stat.label);\n            });\n        }\n        \n        function updateEnhancedVisibility() {\n            if (!window.graphElements) return;\n            \n            // Update node visibility with advanced filtering\n            window.graphElements.node\n                .style(\"opacity\", d => {\n                    if (!shouldShowNode(d)) return 0.1;\n                    if (!showTestDependencies && d.is_test) return 0.3;\n                    return 1;\n                })\n                .style(\"display\", d => shouldShowNode(d) ? \"block\" : \"none\");\n            \n            // Update link visibility\n            window.graphElements.link\n                .classed(\"hidden\", d => !shouldShowEdge(d))\n                .style(\"opacity\", d => {\n                    if (!shouldShowEdge(d)) return 0;\n                    return d.is_test_related && !showTestDependencies ? 0.3 : 0.8;\n                });\n        }\n        \n        function toggleFolder(folder) {\n            if (checkedFolders.has(folder)) {\n                checkedFolders.delete(folder);\n            } else {\n                checkedFolders.add(folder);\n            }\n            updateEnhancedControls();\n            updateEnhancedVisibility();\n            updateEnhancedStats();\n        }\n        \n        function toggleTestDependencies() {\n            showTestDependencies = !showTestDependencies;\n            updateEnhancedControls();\n            updateEnhancedVisibility();\n            updateEnhancedStats();\n        }\n        \n        function resetAllFilters() {\n            checkedFolders = new Set(Object.keys(graphData.subfolder_info));\n            showTestDependencies = true;\n            \n            // Reset advanced filters\n            maxImportsFilter = 20;\n            maxDependenciesFilter = 20;\n            maxSizeFilter = 100;\n            \n            // Update UI controls\n            document.getElementById('imports-filter').value = maxImportsFilter;\n            document.getElementById('dependencies-filter').value = maxDependenciesFilter;\n            document.getElementById('size-filter').value = maxSizeFilter;\n            updateFilterLabels();\n            \n            resetHighlighting();\n            updateEnhancedControls();\n            updateEnhancedVisibility();\n            updateEnhancedStats();\n        }\n        \n        // Advanced filter functions\n        function updateFilterLabels() {\n            document.getElementById('imports-filter-value').textContent = maxImportsFilter;\n            document.getElementById('dependencies-filter-value').textContent = maxDependenciesFilter;\n            document.getElementById('size-filter-value').textContent = maxSizeFilter;\n        }\n        \n        function setupAdvancedFilters() {\n            // Imports filter\n            const importsSlider = document.getElementById('imports-filter');\n            importsSlider.addEventListener('input', function() {\n                maxImportsFilter = parseInt(this.value);\n                updateFilterLabels();\n                updateEnhancedVisibility();\n                updateEnhancedStats();\n            });\n            \n            // Dependencies filter  \n            const dependenciesSlider = document.getElementById('dependencies-filter');\n            dependenciesSlider.addEventListener('input', function() {\n                maxDependenciesFilter = parseInt(this.value);\n                updateFilterLabels();\n                updateEnhancedVisibility();\n                updateEnhancedStats();\n            });\n            \n            // Size filter\n            const sizeSlider = document.getElementById('size-filter');\n            sizeSlider.addEventListener('input', function() {\n                maxSizeFilter = parseInt(this.value);\n                updateFilterLabels();\n                updateEnhancedVisibility();\n                updateEnhancedStats();\n            });\n            \n            // Select all toggle\n            const selectAllToggle = document.getElementById('select-all-toggle');\n            selectAllToggle.addEventListener('click', function() {\n                const allFolders = Object.keys(graphData.subfolder_info);\n                const allSelected = allFolders.every(folder => checkedFolders.has(folder));\n                \n                if (allSelected) {\n                    checkedFolders.clear();\n                } else {\n                    checkedFolders = new Set(allFolders);\n                }\n                \n                updateEnhancedControls();\n                updateEnhancedVisibility();\n                updateEnhancedStats();\n            });\n            \n            updateFilterLabels();\n        }\n        \n        function shouldShowNode(node) {\n            // Check folder visibility\n            if (!checkedFolders.has(node.folder)) return false;\n            \n            // Check advanced filters\n            if (node.imports_count > maxImportsFilter) return false;\n            \n            // Count outgoing dependencies\n            const outgoingDeps = graphData.edges.filter(e => e.source_name === node.id).length;\n            if (outgoingDeps > maxDependenciesFilter) return false;\n            \n            // Check file size (convert bytes to KB)\n            const sizeKB = node.size / 1024;\n            if (sizeKB > maxSizeFilter) return false;\n            \n            return true;\n        }\n        \n        // Enhanced drag functions with layout awareness\n        function dragstarted(event, d) {\n            if (currentLayout === \"force\" && simulation) {\n                if (!event.active) simulation.alphaTarget(0.3).restart();\n            }\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n        \n        function dragged(event, d) {\n            d.fx = event.x;\n            d.fy = event.y;\n            d.x = event.x;\n            d.y = event.y;\n            \n            if (currentLayout === \"hierarchical\") {\n                updatePositions();\n            }\n            // For force layout, the simulation handles position updates\n        }\n        \n        function dragended(event, d) {\n            if (currentLayout === \"force\" && simulation) {\n                if (!event.active) simulation.alphaTarget(0);\n            }\n            d.fx = null;\n            d.fy = null;\n        }\n        \n        function updatePositions() {\n            const { node, link } = window.graphElements;\n            if (!node || !link) return;\n            \n            node.attr(\"transform\", d => `translate(${d.x},${d.y})`);\n            \n            if (currentLayout === \"hierarchical\") {\n                link.attr(\"d\", d => createEnhancedCubicBezierPath(d));\n            } else {\n                // For force layout, use the force layout position update\n                updatePositionsForceLayout();\n            }\n        }\n        \n        // Initialize on load\n        window.addEventListener(\"resize\", updateDimensions);\n        document.addEventListener(\"DOMContentLoaded\", initializeEnhancedVisualization);\n    </script>\n</body>\n</html>"
    }
  },
  "summary": {
    "total_tests": 6,
    "passed_tests": 3,
    "failed_tests": 2,
    "overall_status": "FAIL"
  }
}